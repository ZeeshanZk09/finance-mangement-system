
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `UploadAudit` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model UploadAudit
 * 
 */
export type UploadAuditModel = runtime.Types.Result.DefaultSelection<Prisma.$UploadAuditPayload>

export type AggregateUploadAudit = {
  _count: UploadAuditCountAggregateOutputType | null
  _avg: UploadAuditAvgAggregateOutputType | null
  _sum: UploadAuditSumAggregateOutputType | null
  _min: UploadAuditMinAggregateOutputType | null
  _max: UploadAuditMaxAggregateOutputType | null
}

export type UploadAuditAvgAggregateOutputType = {
  id: number | null
  uploadId: number | null
}

export type UploadAuditSumAggregateOutputType = {
  id: number | null
  uploadId: number | null
}

export type UploadAuditMinAggregateOutputType = {
  id: number | null
  uploadId: number | null
  tenantId: string | null
  userId: string | null
  action: string | null
  previousStatus: string | null
  newStatus: string | null
  note: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type UploadAuditMaxAggregateOutputType = {
  id: number | null
  uploadId: number | null
  tenantId: string | null
  userId: string | null
  action: string | null
  previousStatus: string | null
  newStatus: string | null
  note: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type UploadAuditCountAggregateOutputType = {
  id: number
  uploadId: number
  tenantId: number
  userId: number
  action: number
  previousStatus: number
  newStatus: number
  note: number
  meta: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type UploadAuditAvgAggregateInputType = {
  id?: true
  uploadId?: true
}

export type UploadAuditSumAggregateInputType = {
  id?: true
  uploadId?: true
}

export type UploadAuditMinAggregateInputType = {
  id?: true
  uploadId?: true
  tenantId?: true
  userId?: true
  action?: true
  previousStatus?: true
  newStatus?: true
  note?: true
  createdAt?: true
  updatedAt?: true
}

export type UploadAuditMaxAggregateInputType = {
  id?: true
  uploadId?: true
  tenantId?: true
  userId?: true
  action?: true
  previousStatus?: true
  newStatus?: true
  note?: true
  createdAt?: true
  updatedAt?: true
}

export type UploadAuditCountAggregateInputType = {
  id?: true
  uploadId?: true
  tenantId?: true
  userId?: true
  action?: true
  previousStatus?: true
  newStatus?: true
  note?: true
  meta?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type UploadAuditAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which UploadAudit to aggregate.
   */
  where?: Prisma.UploadAuditWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of UploadAudits to fetch.
   */
  orderBy?: Prisma.UploadAuditOrderByWithRelationInput | Prisma.UploadAuditOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.UploadAuditWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` UploadAudits from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` UploadAudits.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned UploadAudits
  **/
  _count?: true | UploadAuditCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: UploadAuditAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: UploadAuditSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UploadAuditMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UploadAuditMaxAggregateInputType
}

export type GetUploadAuditAggregateType<T extends UploadAuditAggregateArgs> = {
      [P in keyof T & keyof AggregateUploadAudit]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUploadAudit[P]>
    : Prisma.GetScalarType<T[P], AggregateUploadAudit[P]>
}




export type UploadAuditGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UploadAuditWhereInput
  orderBy?: Prisma.UploadAuditOrderByWithAggregationInput | Prisma.UploadAuditOrderByWithAggregationInput[]
  by: Prisma.UploadAuditScalarFieldEnum[] | Prisma.UploadAuditScalarFieldEnum
  having?: Prisma.UploadAuditScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UploadAuditCountAggregateInputType | true
  _avg?: UploadAuditAvgAggregateInputType
  _sum?: UploadAuditSumAggregateInputType
  _min?: UploadAuditMinAggregateInputType
  _max?: UploadAuditMaxAggregateInputType
}

export type UploadAuditGroupByOutputType = {
  id: number
  uploadId: number
  tenantId: string
  userId: string
  action: string
  previousStatus: string | null
  newStatus: string | null
  note: string | null
  meta: runtime.JsonValue | null
  createdAt: Date
  updatedAt: Date | null
  _count: UploadAuditCountAggregateOutputType | null
  _avg: UploadAuditAvgAggregateOutputType | null
  _sum: UploadAuditSumAggregateOutputType | null
  _min: UploadAuditMinAggregateOutputType | null
  _max: UploadAuditMaxAggregateOutputType | null
}

type GetUploadAuditGroupByPayload<T extends UploadAuditGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UploadAuditGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UploadAuditGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UploadAuditGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UploadAuditGroupByOutputType[P]>
      }
    >
  >



export type UploadAuditWhereInput = {
  AND?: Prisma.UploadAuditWhereInput | Prisma.UploadAuditWhereInput[]
  OR?: Prisma.UploadAuditWhereInput[]
  NOT?: Prisma.UploadAuditWhereInput | Prisma.UploadAuditWhereInput[]
  id?: Prisma.IntFilter<"UploadAudit"> | number
  uploadId?: Prisma.IntFilter<"UploadAudit"> | number
  tenantId?: Prisma.UuidFilter<"UploadAudit"> | string
  userId?: Prisma.UuidFilter<"UploadAudit"> | string
  action?: Prisma.StringFilter<"UploadAudit"> | string
  previousStatus?: Prisma.StringNullableFilter<"UploadAudit"> | string | null
  newStatus?: Prisma.StringNullableFilter<"UploadAudit"> | string | null
  note?: Prisma.StringNullableFilter<"UploadAudit"> | string | null
  meta?: Prisma.JsonNullableFilter<"UploadAudit">
  createdAt?: Prisma.DateTimeFilter<"UploadAudit"> | Date | string
  updatedAt?: Prisma.DateTimeNullableFilter<"UploadAudit"> | Date | string | null
  upload?: Prisma.XOR<Prisma.UploadScalarRelationFilter, Prisma.UploadWhereInput>
  tenant?: Prisma.XOR<Prisma.TenantScalarRelationFilter, Prisma.TenantWhereInput>
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type UploadAuditOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  uploadId?: Prisma.SortOrder
  tenantId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  action?: Prisma.SortOrder
  previousStatus?: Prisma.SortOrderInput | Prisma.SortOrder
  newStatus?: Prisma.SortOrderInput | Prisma.SortOrder
  note?: Prisma.SortOrderInput | Prisma.SortOrder
  meta?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  upload?: Prisma.UploadOrderByWithRelationInput
  tenant?: Prisma.TenantOrderByWithRelationInput
  user?: Prisma.UserOrderByWithRelationInput
}

export type UploadAuditWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.UploadAuditWhereInput | Prisma.UploadAuditWhereInput[]
  OR?: Prisma.UploadAuditWhereInput[]
  NOT?: Prisma.UploadAuditWhereInput | Prisma.UploadAuditWhereInput[]
  uploadId?: Prisma.IntFilter<"UploadAudit"> | number
  tenantId?: Prisma.UuidFilter<"UploadAudit"> | string
  userId?: Prisma.UuidFilter<"UploadAudit"> | string
  action?: Prisma.StringFilter<"UploadAudit"> | string
  previousStatus?: Prisma.StringNullableFilter<"UploadAudit"> | string | null
  newStatus?: Prisma.StringNullableFilter<"UploadAudit"> | string | null
  note?: Prisma.StringNullableFilter<"UploadAudit"> | string | null
  meta?: Prisma.JsonNullableFilter<"UploadAudit">
  createdAt?: Prisma.DateTimeFilter<"UploadAudit"> | Date | string
  updatedAt?: Prisma.DateTimeNullableFilter<"UploadAudit"> | Date | string | null
  upload?: Prisma.XOR<Prisma.UploadScalarRelationFilter, Prisma.UploadWhereInput>
  tenant?: Prisma.XOR<Prisma.TenantScalarRelationFilter, Prisma.TenantWhereInput>
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id">

export type UploadAuditOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  uploadId?: Prisma.SortOrder
  tenantId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  action?: Prisma.SortOrder
  previousStatus?: Prisma.SortOrderInput | Prisma.SortOrder
  newStatus?: Prisma.SortOrderInput | Prisma.SortOrder
  note?: Prisma.SortOrderInput | Prisma.SortOrder
  meta?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.UploadAuditCountOrderByAggregateInput
  _avg?: Prisma.UploadAuditAvgOrderByAggregateInput
  _max?: Prisma.UploadAuditMaxOrderByAggregateInput
  _min?: Prisma.UploadAuditMinOrderByAggregateInput
  _sum?: Prisma.UploadAuditSumOrderByAggregateInput
}

export type UploadAuditScalarWhereWithAggregatesInput = {
  AND?: Prisma.UploadAuditScalarWhereWithAggregatesInput | Prisma.UploadAuditScalarWhereWithAggregatesInput[]
  OR?: Prisma.UploadAuditScalarWhereWithAggregatesInput[]
  NOT?: Prisma.UploadAuditScalarWhereWithAggregatesInput | Prisma.UploadAuditScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"UploadAudit"> | number
  uploadId?: Prisma.IntWithAggregatesFilter<"UploadAudit"> | number
  tenantId?: Prisma.UuidWithAggregatesFilter<"UploadAudit"> | string
  userId?: Prisma.UuidWithAggregatesFilter<"UploadAudit"> | string
  action?: Prisma.StringWithAggregatesFilter<"UploadAudit"> | string
  previousStatus?: Prisma.StringNullableWithAggregatesFilter<"UploadAudit"> | string | null
  newStatus?: Prisma.StringNullableWithAggregatesFilter<"UploadAudit"> | string | null
  note?: Prisma.StringNullableWithAggregatesFilter<"UploadAudit"> | string | null
  meta?: Prisma.JsonNullableWithAggregatesFilter<"UploadAudit">
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"UploadAudit"> | Date | string
  updatedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"UploadAudit"> | Date | string | null
}

export type UploadAuditCreateInput = {
  action: string
  previousStatus?: string | null
  newStatus?: string | null
  note?: string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  upload: Prisma.UploadCreateNestedOneWithoutUploadAuditInput
  tenant: Prisma.TenantCreateNestedOneWithoutUploadsInput
  user: Prisma.UserCreateNestedOneWithoutUploadsInput
}

export type UploadAuditUncheckedCreateInput = {
  id?: number
  uploadId: number
  tenantId: string
  userId: string
  action: string
  previousStatus?: string | null
  newStatus?: string | null
  note?: string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
}

export type UploadAuditUpdateInput = {
  action?: Prisma.StringFieldUpdateOperationsInput | string
  previousStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  newStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  upload?: Prisma.UploadUpdateOneRequiredWithoutUploadAuditNestedInput
  tenant?: Prisma.TenantUpdateOneRequiredWithoutUploadsNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutUploadsNestedInput
}

export type UploadAuditUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  uploadId?: Prisma.IntFieldUpdateOperationsInput | number
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  action?: Prisma.StringFieldUpdateOperationsInput | string
  previousStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  newStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type UploadAuditCreateManyInput = {
  id?: number
  uploadId: number
  tenantId: string
  userId: string
  action: string
  previousStatus?: string | null
  newStatus?: string | null
  note?: string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
}

export type UploadAuditUpdateManyMutationInput = {
  action?: Prisma.StringFieldUpdateOperationsInput | string
  previousStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  newStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type UploadAuditUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  uploadId?: Prisma.IntFieldUpdateOperationsInput | number
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  action?: Prisma.StringFieldUpdateOperationsInput | string
  previousStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  newStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type UploadAuditListRelationFilter = {
  every?: Prisma.UploadAuditWhereInput
  some?: Prisma.UploadAuditWhereInput
  none?: Prisma.UploadAuditWhereInput
}

export type UploadAuditOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type UploadAuditCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  uploadId?: Prisma.SortOrder
  tenantId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  action?: Prisma.SortOrder
  previousStatus?: Prisma.SortOrder
  newStatus?: Prisma.SortOrder
  note?: Prisma.SortOrder
  meta?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type UploadAuditAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  uploadId?: Prisma.SortOrder
}

export type UploadAuditMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  uploadId?: Prisma.SortOrder
  tenantId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  action?: Prisma.SortOrder
  previousStatus?: Prisma.SortOrder
  newStatus?: Prisma.SortOrder
  note?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type UploadAuditMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  uploadId?: Prisma.SortOrder
  tenantId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  action?: Prisma.SortOrder
  previousStatus?: Prisma.SortOrder
  newStatus?: Prisma.SortOrder
  note?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type UploadAuditSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  uploadId?: Prisma.SortOrder
}

export type UploadAuditCreateNestedManyWithoutTenantInput = {
  create?: Prisma.XOR<Prisma.UploadAuditCreateWithoutTenantInput, Prisma.UploadAuditUncheckedCreateWithoutTenantInput> | Prisma.UploadAuditCreateWithoutTenantInput[] | Prisma.UploadAuditUncheckedCreateWithoutTenantInput[]
  connectOrCreate?: Prisma.UploadAuditCreateOrConnectWithoutTenantInput | Prisma.UploadAuditCreateOrConnectWithoutTenantInput[]
  createMany?: Prisma.UploadAuditCreateManyTenantInputEnvelope
  connect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
}

export type UploadAuditUncheckedCreateNestedManyWithoutTenantInput = {
  create?: Prisma.XOR<Prisma.UploadAuditCreateWithoutTenantInput, Prisma.UploadAuditUncheckedCreateWithoutTenantInput> | Prisma.UploadAuditCreateWithoutTenantInput[] | Prisma.UploadAuditUncheckedCreateWithoutTenantInput[]
  connectOrCreate?: Prisma.UploadAuditCreateOrConnectWithoutTenantInput | Prisma.UploadAuditCreateOrConnectWithoutTenantInput[]
  createMany?: Prisma.UploadAuditCreateManyTenantInputEnvelope
  connect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
}

export type UploadAuditUpdateManyWithoutTenantNestedInput = {
  create?: Prisma.XOR<Prisma.UploadAuditCreateWithoutTenantInput, Prisma.UploadAuditUncheckedCreateWithoutTenantInput> | Prisma.UploadAuditCreateWithoutTenantInput[] | Prisma.UploadAuditUncheckedCreateWithoutTenantInput[]
  connectOrCreate?: Prisma.UploadAuditCreateOrConnectWithoutTenantInput | Prisma.UploadAuditCreateOrConnectWithoutTenantInput[]
  upsert?: Prisma.UploadAuditUpsertWithWhereUniqueWithoutTenantInput | Prisma.UploadAuditUpsertWithWhereUniqueWithoutTenantInput[]
  createMany?: Prisma.UploadAuditCreateManyTenantInputEnvelope
  set?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  disconnect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  delete?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  connect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  update?: Prisma.UploadAuditUpdateWithWhereUniqueWithoutTenantInput | Prisma.UploadAuditUpdateWithWhereUniqueWithoutTenantInput[]
  updateMany?: Prisma.UploadAuditUpdateManyWithWhereWithoutTenantInput | Prisma.UploadAuditUpdateManyWithWhereWithoutTenantInput[]
  deleteMany?: Prisma.UploadAuditScalarWhereInput | Prisma.UploadAuditScalarWhereInput[]
}

export type UploadAuditUncheckedUpdateManyWithoutTenantNestedInput = {
  create?: Prisma.XOR<Prisma.UploadAuditCreateWithoutTenantInput, Prisma.UploadAuditUncheckedCreateWithoutTenantInput> | Prisma.UploadAuditCreateWithoutTenantInput[] | Prisma.UploadAuditUncheckedCreateWithoutTenantInput[]
  connectOrCreate?: Prisma.UploadAuditCreateOrConnectWithoutTenantInput | Prisma.UploadAuditCreateOrConnectWithoutTenantInput[]
  upsert?: Prisma.UploadAuditUpsertWithWhereUniqueWithoutTenantInput | Prisma.UploadAuditUpsertWithWhereUniqueWithoutTenantInput[]
  createMany?: Prisma.UploadAuditCreateManyTenantInputEnvelope
  set?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  disconnect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  delete?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  connect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  update?: Prisma.UploadAuditUpdateWithWhereUniqueWithoutTenantInput | Prisma.UploadAuditUpdateWithWhereUniqueWithoutTenantInput[]
  updateMany?: Prisma.UploadAuditUpdateManyWithWhereWithoutTenantInput | Prisma.UploadAuditUpdateManyWithWhereWithoutTenantInput[]
  deleteMany?: Prisma.UploadAuditScalarWhereInput | Prisma.UploadAuditScalarWhereInput[]
}

export type UploadAuditCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.UploadAuditCreateWithoutUserInput, Prisma.UploadAuditUncheckedCreateWithoutUserInput> | Prisma.UploadAuditCreateWithoutUserInput[] | Prisma.UploadAuditUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.UploadAuditCreateOrConnectWithoutUserInput | Prisma.UploadAuditCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.UploadAuditCreateManyUserInputEnvelope
  connect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
}

export type UploadAuditUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.UploadAuditCreateWithoutUserInput, Prisma.UploadAuditUncheckedCreateWithoutUserInput> | Prisma.UploadAuditCreateWithoutUserInput[] | Prisma.UploadAuditUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.UploadAuditCreateOrConnectWithoutUserInput | Prisma.UploadAuditCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.UploadAuditCreateManyUserInputEnvelope
  connect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
}

export type UploadAuditUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.UploadAuditCreateWithoutUserInput, Prisma.UploadAuditUncheckedCreateWithoutUserInput> | Prisma.UploadAuditCreateWithoutUserInput[] | Prisma.UploadAuditUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.UploadAuditCreateOrConnectWithoutUserInput | Prisma.UploadAuditCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.UploadAuditUpsertWithWhereUniqueWithoutUserInput | Prisma.UploadAuditUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.UploadAuditCreateManyUserInputEnvelope
  set?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  disconnect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  delete?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  connect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  update?: Prisma.UploadAuditUpdateWithWhereUniqueWithoutUserInput | Prisma.UploadAuditUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.UploadAuditUpdateManyWithWhereWithoutUserInput | Prisma.UploadAuditUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.UploadAuditScalarWhereInput | Prisma.UploadAuditScalarWhereInput[]
}

export type UploadAuditUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.UploadAuditCreateWithoutUserInput, Prisma.UploadAuditUncheckedCreateWithoutUserInput> | Prisma.UploadAuditCreateWithoutUserInput[] | Prisma.UploadAuditUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.UploadAuditCreateOrConnectWithoutUserInput | Prisma.UploadAuditCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.UploadAuditUpsertWithWhereUniqueWithoutUserInput | Prisma.UploadAuditUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.UploadAuditCreateManyUserInputEnvelope
  set?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  disconnect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  delete?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  connect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  update?: Prisma.UploadAuditUpdateWithWhereUniqueWithoutUserInput | Prisma.UploadAuditUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.UploadAuditUpdateManyWithWhereWithoutUserInput | Prisma.UploadAuditUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.UploadAuditScalarWhereInput | Prisma.UploadAuditScalarWhereInput[]
}

export type UploadAuditCreateNestedManyWithoutUploadInput = {
  create?: Prisma.XOR<Prisma.UploadAuditCreateWithoutUploadInput, Prisma.UploadAuditUncheckedCreateWithoutUploadInput> | Prisma.UploadAuditCreateWithoutUploadInput[] | Prisma.UploadAuditUncheckedCreateWithoutUploadInput[]
  connectOrCreate?: Prisma.UploadAuditCreateOrConnectWithoutUploadInput | Prisma.UploadAuditCreateOrConnectWithoutUploadInput[]
  createMany?: Prisma.UploadAuditCreateManyUploadInputEnvelope
  connect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
}

export type UploadAuditUncheckedCreateNestedManyWithoutUploadInput = {
  create?: Prisma.XOR<Prisma.UploadAuditCreateWithoutUploadInput, Prisma.UploadAuditUncheckedCreateWithoutUploadInput> | Prisma.UploadAuditCreateWithoutUploadInput[] | Prisma.UploadAuditUncheckedCreateWithoutUploadInput[]
  connectOrCreate?: Prisma.UploadAuditCreateOrConnectWithoutUploadInput | Prisma.UploadAuditCreateOrConnectWithoutUploadInput[]
  createMany?: Prisma.UploadAuditCreateManyUploadInputEnvelope
  connect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
}

export type UploadAuditUpdateManyWithoutUploadNestedInput = {
  create?: Prisma.XOR<Prisma.UploadAuditCreateWithoutUploadInput, Prisma.UploadAuditUncheckedCreateWithoutUploadInput> | Prisma.UploadAuditCreateWithoutUploadInput[] | Prisma.UploadAuditUncheckedCreateWithoutUploadInput[]
  connectOrCreate?: Prisma.UploadAuditCreateOrConnectWithoutUploadInput | Prisma.UploadAuditCreateOrConnectWithoutUploadInput[]
  upsert?: Prisma.UploadAuditUpsertWithWhereUniqueWithoutUploadInput | Prisma.UploadAuditUpsertWithWhereUniqueWithoutUploadInput[]
  createMany?: Prisma.UploadAuditCreateManyUploadInputEnvelope
  set?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  disconnect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  delete?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  connect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  update?: Prisma.UploadAuditUpdateWithWhereUniqueWithoutUploadInput | Prisma.UploadAuditUpdateWithWhereUniqueWithoutUploadInput[]
  updateMany?: Prisma.UploadAuditUpdateManyWithWhereWithoutUploadInput | Prisma.UploadAuditUpdateManyWithWhereWithoutUploadInput[]
  deleteMany?: Prisma.UploadAuditScalarWhereInput | Prisma.UploadAuditScalarWhereInput[]
}

export type UploadAuditUncheckedUpdateManyWithoutUploadNestedInput = {
  create?: Prisma.XOR<Prisma.UploadAuditCreateWithoutUploadInput, Prisma.UploadAuditUncheckedCreateWithoutUploadInput> | Prisma.UploadAuditCreateWithoutUploadInput[] | Prisma.UploadAuditUncheckedCreateWithoutUploadInput[]
  connectOrCreate?: Prisma.UploadAuditCreateOrConnectWithoutUploadInput | Prisma.UploadAuditCreateOrConnectWithoutUploadInput[]
  upsert?: Prisma.UploadAuditUpsertWithWhereUniqueWithoutUploadInput | Prisma.UploadAuditUpsertWithWhereUniqueWithoutUploadInput[]
  createMany?: Prisma.UploadAuditCreateManyUploadInputEnvelope
  set?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  disconnect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  delete?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  connect?: Prisma.UploadAuditWhereUniqueInput | Prisma.UploadAuditWhereUniqueInput[]
  update?: Prisma.UploadAuditUpdateWithWhereUniqueWithoutUploadInput | Prisma.UploadAuditUpdateWithWhereUniqueWithoutUploadInput[]
  updateMany?: Prisma.UploadAuditUpdateManyWithWhereWithoutUploadInput | Prisma.UploadAuditUpdateManyWithWhereWithoutUploadInput[]
  deleteMany?: Prisma.UploadAuditScalarWhereInput | Prisma.UploadAuditScalarWhereInput[]
}

export type UploadAuditCreateWithoutTenantInput = {
  action: string
  previousStatus?: string | null
  newStatus?: string | null
  note?: string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  upload: Prisma.UploadCreateNestedOneWithoutUploadAuditInput
  user: Prisma.UserCreateNestedOneWithoutUploadsInput
}

export type UploadAuditUncheckedCreateWithoutTenantInput = {
  id?: number
  uploadId: number
  userId: string
  action: string
  previousStatus?: string | null
  newStatus?: string | null
  note?: string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
}

export type UploadAuditCreateOrConnectWithoutTenantInput = {
  where: Prisma.UploadAuditWhereUniqueInput
  create: Prisma.XOR<Prisma.UploadAuditCreateWithoutTenantInput, Prisma.UploadAuditUncheckedCreateWithoutTenantInput>
}

export type UploadAuditCreateManyTenantInputEnvelope = {
  data: Prisma.UploadAuditCreateManyTenantInput | Prisma.UploadAuditCreateManyTenantInput[]
  skipDuplicates?: boolean
}

export type UploadAuditUpsertWithWhereUniqueWithoutTenantInput = {
  where: Prisma.UploadAuditWhereUniqueInput
  update: Prisma.XOR<Prisma.UploadAuditUpdateWithoutTenantInput, Prisma.UploadAuditUncheckedUpdateWithoutTenantInput>
  create: Prisma.XOR<Prisma.UploadAuditCreateWithoutTenantInput, Prisma.UploadAuditUncheckedCreateWithoutTenantInput>
}

export type UploadAuditUpdateWithWhereUniqueWithoutTenantInput = {
  where: Prisma.UploadAuditWhereUniqueInput
  data: Prisma.XOR<Prisma.UploadAuditUpdateWithoutTenantInput, Prisma.UploadAuditUncheckedUpdateWithoutTenantInput>
}

export type UploadAuditUpdateManyWithWhereWithoutTenantInput = {
  where: Prisma.UploadAuditScalarWhereInput
  data: Prisma.XOR<Prisma.UploadAuditUpdateManyMutationInput, Prisma.UploadAuditUncheckedUpdateManyWithoutTenantInput>
}

export type UploadAuditScalarWhereInput = {
  AND?: Prisma.UploadAuditScalarWhereInput | Prisma.UploadAuditScalarWhereInput[]
  OR?: Prisma.UploadAuditScalarWhereInput[]
  NOT?: Prisma.UploadAuditScalarWhereInput | Prisma.UploadAuditScalarWhereInput[]
  id?: Prisma.IntFilter<"UploadAudit"> | number
  uploadId?: Prisma.IntFilter<"UploadAudit"> | number
  tenantId?: Prisma.UuidFilter<"UploadAudit"> | string
  userId?: Prisma.UuidFilter<"UploadAudit"> | string
  action?: Prisma.StringFilter<"UploadAudit"> | string
  previousStatus?: Prisma.StringNullableFilter<"UploadAudit"> | string | null
  newStatus?: Prisma.StringNullableFilter<"UploadAudit"> | string | null
  note?: Prisma.StringNullableFilter<"UploadAudit"> | string | null
  meta?: Prisma.JsonNullableFilter<"UploadAudit">
  createdAt?: Prisma.DateTimeFilter<"UploadAudit"> | Date | string
  updatedAt?: Prisma.DateTimeNullableFilter<"UploadAudit"> | Date | string | null
}

export type UploadAuditCreateWithoutUserInput = {
  action: string
  previousStatus?: string | null
  newStatus?: string | null
  note?: string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  upload: Prisma.UploadCreateNestedOneWithoutUploadAuditInput
  tenant: Prisma.TenantCreateNestedOneWithoutUploadsInput
}

export type UploadAuditUncheckedCreateWithoutUserInput = {
  id?: number
  uploadId: number
  tenantId: string
  action: string
  previousStatus?: string | null
  newStatus?: string | null
  note?: string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
}

export type UploadAuditCreateOrConnectWithoutUserInput = {
  where: Prisma.UploadAuditWhereUniqueInput
  create: Prisma.XOR<Prisma.UploadAuditCreateWithoutUserInput, Prisma.UploadAuditUncheckedCreateWithoutUserInput>
}

export type UploadAuditCreateManyUserInputEnvelope = {
  data: Prisma.UploadAuditCreateManyUserInput | Prisma.UploadAuditCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type UploadAuditUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.UploadAuditWhereUniqueInput
  update: Prisma.XOR<Prisma.UploadAuditUpdateWithoutUserInput, Prisma.UploadAuditUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.UploadAuditCreateWithoutUserInput, Prisma.UploadAuditUncheckedCreateWithoutUserInput>
}

export type UploadAuditUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.UploadAuditWhereUniqueInput
  data: Prisma.XOR<Prisma.UploadAuditUpdateWithoutUserInput, Prisma.UploadAuditUncheckedUpdateWithoutUserInput>
}

export type UploadAuditUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.UploadAuditScalarWhereInput
  data: Prisma.XOR<Prisma.UploadAuditUpdateManyMutationInput, Prisma.UploadAuditUncheckedUpdateManyWithoutUserInput>
}

export type UploadAuditCreateWithoutUploadInput = {
  action: string
  previousStatus?: string | null
  newStatus?: string | null
  note?: string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  tenant: Prisma.TenantCreateNestedOneWithoutUploadsInput
  user: Prisma.UserCreateNestedOneWithoutUploadsInput
}

export type UploadAuditUncheckedCreateWithoutUploadInput = {
  id?: number
  tenantId: string
  userId: string
  action: string
  previousStatus?: string | null
  newStatus?: string | null
  note?: string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
}

export type UploadAuditCreateOrConnectWithoutUploadInput = {
  where: Prisma.UploadAuditWhereUniqueInput
  create: Prisma.XOR<Prisma.UploadAuditCreateWithoutUploadInput, Prisma.UploadAuditUncheckedCreateWithoutUploadInput>
}

export type UploadAuditCreateManyUploadInputEnvelope = {
  data: Prisma.UploadAuditCreateManyUploadInput | Prisma.UploadAuditCreateManyUploadInput[]
  skipDuplicates?: boolean
}

export type UploadAuditUpsertWithWhereUniqueWithoutUploadInput = {
  where: Prisma.UploadAuditWhereUniqueInput
  update: Prisma.XOR<Prisma.UploadAuditUpdateWithoutUploadInput, Prisma.UploadAuditUncheckedUpdateWithoutUploadInput>
  create: Prisma.XOR<Prisma.UploadAuditCreateWithoutUploadInput, Prisma.UploadAuditUncheckedCreateWithoutUploadInput>
}

export type UploadAuditUpdateWithWhereUniqueWithoutUploadInput = {
  where: Prisma.UploadAuditWhereUniqueInput
  data: Prisma.XOR<Prisma.UploadAuditUpdateWithoutUploadInput, Prisma.UploadAuditUncheckedUpdateWithoutUploadInput>
}

export type UploadAuditUpdateManyWithWhereWithoutUploadInput = {
  where: Prisma.UploadAuditScalarWhereInput
  data: Prisma.XOR<Prisma.UploadAuditUpdateManyMutationInput, Prisma.UploadAuditUncheckedUpdateManyWithoutUploadInput>
}

export type UploadAuditCreateManyTenantInput = {
  id?: number
  uploadId: number
  userId: string
  action: string
  previousStatus?: string | null
  newStatus?: string | null
  note?: string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
}

export type UploadAuditUpdateWithoutTenantInput = {
  action?: Prisma.StringFieldUpdateOperationsInput | string
  previousStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  newStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  upload?: Prisma.UploadUpdateOneRequiredWithoutUploadAuditNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutUploadsNestedInput
}

export type UploadAuditUncheckedUpdateWithoutTenantInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  uploadId?: Prisma.IntFieldUpdateOperationsInput | number
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  action?: Prisma.StringFieldUpdateOperationsInput | string
  previousStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  newStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type UploadAuditUncheckedUpdateManyWithoutTenantInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  uploadId?: Prisma.IntFieldUpdateOperationsInput | number
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  action?: Prisma.StringFieldUpdateOperationsInput | string
  previousStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  newStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type UploadAuditCreateManyUserInput = {
  id?: number
  uploadId: number
  tenantId: string
  action: string
  previousStatus?: string | null
  newStatus?: string | null
  note?: string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
}

export type UploadAuditUpdateWithoutUserInput = {
  action?: Prisma.StringFieldUpdateOperationsInput | string
  previousStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  newStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  upload?: Prisma.UploadUpdateOneRequiredWithoutUploadAuditNestedInput
  tenant?: Prisma.TenantUpdateOneRequiredWithoutUploadsNestedInput
}

export type UploadAuditUncheckedUpdateWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  uploadId?: Prisma.IntFieldUpdateOperationsInput | number
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string
  action?: Prisma.StringFieldUpdateOperationsInput | string
  previousStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  newStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type UploadAuditUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  uploadId?: Prisma.IntFieldUpdateOperationsInput | number
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string
  action?: Prisma.StringFieldUpdateOperationsInput | string
  previousStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  newStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type UploadAuditCreateManyUploadInput = {
  id?: number
  tenantId: string
  userId: string
  action: string
  previousStatus?: string | null
  newStatus?: string | null
  note?: string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
}

export type UploadAuditUpdateWithoutUploadInput = {
  action?: Prisma.StringFieldUpdateOperationsInput | string
  previousStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  newStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  tenant?: Prisma.TenantUpdateOneRequiredWithoutUploadsNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutUploadsNestedInput
}

export type UploadAuditUncheckedUpdateWithoutUploadInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  action?: Prisma.StringFieldUpdateOperationsInput | string
  previousStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  newStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type UploadAuditUncheckedUpdateManyWithoutUploadInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  action?: Prisma.StringFieldUpdateOperationsInput | string
  previousStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  newStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}



export type UploadAuditSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  uploadId?: boolean
  tenantId?: boolean
  userId?: boolean
  action?: boolean
  previousStatus?: boolean
  newStatus?: boolean
  note?: boolean
  meta?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  upload?: boolean | Prisma.UploadDefaultArgs<ExtArgs>
  tenant?: boolean | Prisma.TenantDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["uploadAudit"]>

export type UploadAuditSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  uploadId?: boolean
  tenantId?: boolean
  userId?: boolean
  action?: boolean
  previousStatus?: boolean
  newStatus?: boolean
  note?: boolean
  meta?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  upload?: boolean | Prisma.UploadDefaultArgs<ExtArgs>
  tenant?: boolean | Prisma.TenantDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["uploadAudit"]>

export type UploadAuditSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  uploadId?: boolean
  tenantId?: boolean
  userId?: boolean
  action?: boolean
  previousStatus?: boolean
  newStatus?: boolean
  note?: boolean
  meta?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  upload?: boolean | Prisma.UploadDefaultArgs<ExtArgs>
  tenant?: boolean | Prisma.TenantDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["uploadAudit"]>

export type UploadAuditSelectScalar = {
  id?: boolean
  uploadId?: boolean
  tenantId?: boolean
  userId?: boolean
  action?: boolean
  previousStatus?: boolean
  newStatus?: boolean
  note?: boolean
  meta?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type UploadAuditOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "uploadId" | "tenantId" | "userId" | "action" | "previousStatus" | "newStatus" | "note" | "meta" | "createdAt" | "updatedAt", ExtArgs["result"]["uploadAudit"]>
export type UploadAuditInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  upload?: boolean | Prisma.UploadDefaultArgs<ExtArgs>
  tenant?: boolean | Prisma.TenantDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type UploadAuditIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  upload?: boolean | Prisma.UploadDefaultArgs<ExtArgs>
  tenant?: boolean | Prisma.TenantDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type UploadAuditIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  upload?: boolean | Prisma.UploadDefaultArgs<ExtArgs>
  tenant?: boolean | Prisma.TenantDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $UploadAuditPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "UploadAudit"
  objects: {
    upload: Prisma.$UploadPayload<ExtArgs>
    tenant: Prisma.$TenantPayload<ExtArgs>
    user: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    uploadId: number
    tenantId: string
    userId: string
    action: string
    previousStatus: string | null
    newStatus: string | null
    note: string | null
    meta: runtime.JsonValue | null
    createdAt: Date
    updatedAt: Date | null
  }, ExtArgs["result"]["uploadAudit"]>
  composites: {}
}

export type UploadAuditGetPayload<S extends boolean | null | undefined | UploadAuditDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$UploadAuditPayload, S>

export type UploadAuditCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<UploadAuditFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: UploadAuditCountAggregateInputType | true
  }

export interface UploadAuditDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UploadAudit'], meta: { name: 'UploadAudit' } }
  /**
   * Find zero or one UploadAudit that matches the filter.
   * @param {UploadAuditFindUniqueArgs} args - Arguments to find a UploadAudit
   * @example
   * // Get one UploadAudit
   * const uploadAudit = await prisma.uploadAudit.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UploadAuditFindUniqueArgs>(args: Prisma.SelectSubset<T, UploadAuditFindUniqueArgs<ExtArgs>>): Prisma.Prisma__UploadAuditClient<runtime.Types.Result.GetResult<Prisma.$UploadAuditPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one UploadAudit that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UploadAuditFindUniqueOrThrowArgs} args - Arguments to find a UploadAudit
   * @example
   * // Get one UploadAudit
   * const uploadAudit = await prisma.uploadAudit.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UploadAuditFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, UploadAuditFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__UploadAuditClient<runtime.Types.Result.GetResult<Prisma.$UploadAuditPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first UploadAudit that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UploadAuditFindFirstArgs} args - Arguments to find a UploadAudit
   * @example
   * // Get one UploadAudit
   * const uploadAudit = await prisma.uploadAudit.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UploadAuditFindFirstArgs>(args?: Prisma.SelectSubset<T, UploadAuditFindFirstArgs<ExtArgs>>): Prisma.Prisma__UploadAuditClient<runtime.Types.Result.GetResult<Prisma.$UploadAuditPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first UploadAudit that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UploadAuditFindFirstOrThrowArgs} args - Arguments to find a UploadAudit
   * @example
   * // Get one UploadAudit
   * const uploadAudit = await prisma.uploadAudit.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UploadAuditFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, UploadAuditFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__UploadAuditClient<runtime.Types.Result.GetResult<Prisma.$UploadAuditPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more UploadAudits that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UploadAuditFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all UploadAudits
   * const uploadAudits = await prisma.uploadAudit.findMany()
   * 
   * // Get first 10 UploadAudits
   * const uploadAudits = await prisma.uploadAudit.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const uploadAuditWithIdOnly = await prisma.uploadAudit.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends UploadAuditFindManyArgs>(args?: Prisma.SelectSubset<T, UploadAuditFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UploadAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a UploadAudit.
   * @param {UploadAuditCreateArgs} args - Arguments to create a UploadAudit.
   * @example
   * // Create one UploadAudit
   * const UploadAudit = await prisma.uploadAudit.create({
   *   data: {
   *     // ... data to create a UploadAudit
   *   }
   * })
   * 
   */
  create<T extends UploadAuditCreateArgs>(args: Prisma.SelectSubset<T, UploadAuditCreateArgs<ExtArgs>>): Prisma.Prisma__UploadAuditClient<runtime.Types.Result.GetResult<Prisma.$UploadAuditPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many UploadAudits.
   * @param {UploadAuditCreateManyArgs} args - Arguments to create many UploadAudits.
   * @example
   * // Create many UploadAudits
   * const uploadAudit = await prisma.uploadAudit.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends UploadAuditCreateManyArgs>(args?: Prisma.SelectSubset<T, UploadAuditCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many UploadAudits and returns the data saved in the database.
   * @param {UploadAuditCreateManyAndReturnArgs} args - Arguments to create many UploadAudits.
   * @example
   * // Create many UploadAudits
   * const uploadAudit = await prisma.uploadAudit.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many UploadAudits and only return the `id`
   * const uploadAuditWithIdOnly = await prisma.uploadAudit.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends UploadAuditCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, UploadAuditCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UploadAuditPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a UploadAudit.
   * @param {UploadAuditDeleteArgs} args - Arguments to delete one UploadAudit.
   * @example
   * // Delete one UploadAudit
   * const UploadAudit = await prisma.uploadAudit.delete({
   *   where: {
   *     // ... filter to delete one UploadAudit
   *   }
   * })
   * 
   */
  delete<T extends UploadAuditDeleteArgs>(args: Prisma.SelectSubset<T, UploadAuditDeleteArgs<ExtArgs>>): Prisma.Prisma__UploadAuditClient<runtime.Types.Result.GetResult<Prisma.$UploadAuditPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one UploadAudit.
   * @param {UploadAuditUpdateArgs} args - Arguments to update one UploadAudit.
   * @example
   * // Update one UploadAudit
   * const uploadAudit = await prisma.uploadAudit.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends UploadAuditUpdateArgs>(args: Prisma.SelectSubset<T, UploadAuditUpdateArgs<ExtArgs>>): Prisma.Prisma__UploadAuditClient<runtime.Types.Result.GetResult<Prisma.$UploadAuditPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more UploadAudits.
   * @param {UploadAuditDeleteManyArgs} args - Arguments to filter UploadAudits to delete.
   * @example
   * // Delete a few UploadAudits
   * const { count } = await prisma.uploadAudit.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends UploadAuditDeleteManyArgs>(args?: Prisma.SelectSubset<T, UploadAuditDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more UploadAudits.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UploadAuditUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many UploadAudits
   * const uploadAudit = await prisma.uploadAudit.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends UploadAuditUpdateManyArgs>(args: Prisma.SelectSubset<T, UploadAuditUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more UploadAudits and returns the data updated in the database.
   * @param {UploadAuditUpdateManyAndReturnArgs} args - Arguments to update many UploadAudits.
   * @example
   * // Update many UploadAudits
   * const uploadAudit = await prisma.uploadAudit.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more UploadAudits and only return the `id`
   * const uploadAuditWithIdOnly = await prisma.uploadAudit.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends UploadAuditUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, UploadAuditUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UploadAuditPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one UploadAudit.
   * @param {UploadAuditUpsertArgs} args - Arguments to update or create a UploadAudit.
   * @example
   * // Update or create a UploadAudit
   * const uploadAudit = await prisma.uploadAudit.upsert({
   *   create: {
   *     // ... data to create a UploadAudit
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the UploadAudit we want to update
   *   }
   * })
   */
  upsert<T extends UploadAuditUpsertArgs>(args: Prisma.SelectSubset<T, UploadAuditUpsertArgs<ExtArgs>>): Prisma.Prisma__UploadAuditClient<runtime.Types.Result.GetResult<Prisma.$UploadAuditPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of UploadAudits.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UploadAuditCountArgs} args - Arguments to filter UploadAudits to count.
   * @example
   * // Count the number of UploadAudits
   * const count = await prisma.uploadAudit.count({
   *   where: {
   *     // ... the filter for the UploadAudits we want to count
   *   }
   * })
  **/
  count<T extends UploadAuditCountArgs>(
    args?: Prisma.Subset<T, UploadAuditCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UploadAuditCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a UploadAudit.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UploadAuditAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UploadAuditAggregateArgs>(args: Prisma.Subset<T, UploadAuditAggregateArgs>): Prisma.PrismaPromise<GetUploadAuditAggregateType<T>>

  /**
   * Group by UploadAudit.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UploadAuditGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends UploadAuditGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UploadAuditGroupByArgs['orderBy'] }
      : { orderBy?: UploadAuditGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, UploadAuditGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUploadAuditGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the UploadAudit model
 */
readonly fields: UploadAuditFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for UploadAudit.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UploadAuditClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  upload<T extends Prisma.UploadDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UploadDefaultArgs<ExtArgs>>): Prisma.Prisma__UploadClient<runtime.Types.Result.GetResult<Prisma.$UploadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  tenant<T extends Prisma.TenantDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TenantDefaultArgs<ExtArgs>>): Prisma.Prisma__TenantClient<runtime.Types.Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the UploadAudit model
 */
export interface UploadAuditFieldRefs {
  readonly id: Prisma.FieldRef<"UploadAudit", 'Int'>
  readonly uploadId: Prisma.FieldRef<"UploadAudit", 'Int'>
  readonly tenantId: Prisma.FieldRef<"UploadAudit", 'String'>
  readonly userId: Prisma.FieldRef<"UploadAudit", 'String'>
  readonly action: Prisma.FieldRef<"UploadAudit", 'String'>
  readonly previousStatus: Prisma.FieldRef<"UploadAudit", 'String'>
  readonly newStatus: Prisma.FieldRef<"UploadAudit", 'String'>
  readonly note: Prisma.FieldRef<"UploadAudit", 'String'>
  readonly meta: Prisma.FieldRef<"UploadAudit", 'Json'>
  readonly createdAt: Prisma.FieldRef<"UploadAudit", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"UploadAudit", 'DateTime'>
}
    

// Custom InputTypes
/**
 * UploadAudit findUnique
 */
export type UploadAuditFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UploadAudit
   */
  select?: Prisma.UploadAuditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UploadAudit
   */
  omit?: Prisma.UploadAuditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadAuditInclude<ExtArgs> | null
  /**
   * Filter, which UploadAudit to fetch.
   */
  where: Prisma.UploadAuditWhereUniqueInput
}

/**
 * UploadAudit findUniqueOrThrow
 */
export type UploadAuditFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UploadAudit
   */
  select?: Prisma.UploadAuditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UploadAudit
   */
  omit?: Prisma.UploadAuditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadAuditInclude<ExtArgs> | null
  /**
   * Filter, which UploadAudit to fetch.
   */
  where: Prisma.UploadAuditWhereUniqueInput
}

/**
 * UploadAudit findFirst
 */
export type UploadAuditFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UploadAudit
   */
  select?: Prisma.UploadAuditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UploadAudit
   */
  omit?: Prisma.UploadAuditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadAuditInclude<ExtArgs> | null
  /**
   * Filter, which UploadAudit to fetch.
   */
  where?: Prisma.UploadAuditWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of UploadAudits to fetch.
   */
  orderBy?: Prisma.UploadAuditOrderByWithRelationInput | Prisma.UploadAuditOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for UploadAudits.
   */
  cursor?: Prisma.UploadAuditWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` UploadAudits from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` UploadAudits.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of UploadAudits.
   */
  distinct?: Prisma.UploadAuditScalarFieldEnum | Prisma.UploadAuditScalarFieldEnum[]
}

/**
 * UploadAudit findFirstOrThrow
 */
export type UploadAuditFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UploadAudit
   */
  select?: Prisma.UploadAuditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UploadAudit
   */
  omit?: Prisma.UploadAuditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadAuditInclude<ExtArgs> | null
  /**
   * Filter, which UploadAudit to fetch.
   */
  where?: Prisma.UploadAuditWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of UploadAudits to fetch.
   */
  orderBy?: Prisma.UploadAuditOrderByWithRelationInput | Prisma.UploadAuditOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for UploadAudits.
   */
  cursor?: Prisma.UploadAuditWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` UploadAudits from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` UploadAudits.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of UploadAudits.
   */
  distinct?: Prisma.UploadAuditScalarFieldEnum | Prisma.UploadAuditScalarFieldEnum[]
}

/**
 * UploadAudit findMany
 */
export type UploadAuditFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UploadAudit
   */
  select?: Prisma.UploadAuditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UploadAudit
   */
  omit?: Prisma.UploadAuditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadAuditInclude<ExtArgs> | null
  /**
   * Filter, which UploadAudits to fetch.
   */
  where?: Prisma.UploadAuditWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of UploadAudits to fetch.
   */
  orderBy?: Prisma.UploadAuditOrderByWithRelationInput | Prisma.UploadAuditOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing UploadAudits.
   */
  cursor?: Prisma.UploadAuditWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` UploadAudits from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` UploadAudits.
   */
  skip?: number
  distinct?: Prisma.UploadAuditScalarFieldEnum | Prisma.UploadAuditScalarFieldEnum[]
}

/**
 * UploadAudit create
 */
export type UploadAuditCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UploadAudit
   */
  select?: Prisma.UploadAuditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UploadAudit
   */
  omit?: Prisma.UploadAuditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadAuditInclude<ExtArgs> | null
  /**
   * The data needed to create a UploadAudit.
   */
  data: Prisma.XOR<Prisma.UploadAuditCreateInput, Prisma.UploadAuditUncheckedCreateInput>
}

/**
 * UploadAudit createMany
 */
export type UploadAuditCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many UploadAudits.
   */
  data: Prisma.UploadAuditCreateManyInput | Prisma.UploadAuditCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * UploadAudit createManyAndReturn
 */
export type UploadAuditCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UploadAudit
   */
  select?: Prisma.UploadAuditSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the UploadAudit
   */
  omit?: Prisma.UploadAuditOmit<ExtArgs> | null
  /**
   * The data used to create many UploadAudits.
   */
  data: Prisma.UploadAuditCreateManyInput | Prisma.UploadAuditCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadAuditIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * UploadAudit update
 */
export type UploadAuditUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UploadAudit
   */
  select?: Prisma.UploadAuditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UploadAudit
   */
  omit?: Prisma.UploadAuditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadAuditInclude<ExtArgs> | null
  /**
   * The data needed to update a UploadAudit.
   */
  data: Prisma.XOR<Prisma.UploadAuditUpdateInput, Prisma.UploadAuditUncheckedUpdateInput>
  /**
   * Choose, which UploadAudit to update.
   */
  where: Prisma.UploadAuditWhereUniqueInput
}

/**
 * UploadAudit updateMany
 */
export type UploadAuditUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update UploadAudits.
   */
  data: Prisma.XOR<Prisma.UploadAuditUpdateManyMutationInput, Prisma.UploadAuditUncheckedUpdateManyInput>
  /**
   * Filter which UploadAudits to update
   */
  where?: Prisma.UploadAuditWhereInput
  /**
   * Limit how many UploadAudits to update.
   */
  limit?: number
}

/**
 * UploadAudit updateManyAndReturn
 */
export type UploadAuditUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UploadAudit
   */
  select?: Prisma.UploadAuditSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the UploadAudit
   */
  omit?: Prisma.UploadAuditOmit<ExtArgs> | null
  /**
   * The data used to update UploadAudits.
   */
  data: Prisma.XOR<Prisma.UploadAuditUpdateManyMutationInput, Prisma.UploadAuditUncheckedUpdateManyInput>
  /**
   * Filter which UploadAudits to update
   */
  where?: Prisma.UploadAuditWhereInput
  /**
   * Limit how many UploadAudits to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadAuditIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * UploadAudit upsert
 */
export type UploadAuditUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UploadAudit
   */
  select?: Prisma.UploadAuditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UploadAudit
   */
  omit?: Prisma.UploadAuditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadAuditInclude<ExtArgs> | null
  /**
   * The filter to search for the UploadAudit to update in case it exists.
   */
  where: Prisma.UploadAuditWhereUniqueInput
  /**
   * In case the UploadAudit found by the `where` argument doesn't exist, create a new UploadAudit with this data.
   */
  create: Prisma.XOR<Prisma.UploadAuditCreateInput, Prisma.UploadAuditUncheckedCreateInput>
  /**
   * In case the UploadAudit was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UploadAuditUpdateInput, Prisma.UploadAuditUncheckedUpdateInput>
}

/**
 * UploadAudit delete
 */
export type UploadAuditDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UploadAudit
   */
  select?: Prisma.UploadAuditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UploadAudit
   */
  omit?: Prisma.UploadAuditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadAuditInclude<ExtArgs> | null
  /**
   * Filter which UploadAudit to delete.
   */
  where: Prisma.UploadAuditWhereUniqueInput
}

/**
 * UploadAudit deleteMany
 */
export type UploadAuditDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which UploadAudits to delete
   */
  where?: Prisma.UploadAuditWhereInput
  /**
   * Limit how many UploadAudits to delete.
   */
  limit?: number
}

/**
 * UploadAudit without action
 */
export type UploadAuditDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UploadAudit
   */
  select?: Prisma.UploadAuditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UploadAudit
   */
  omit?: Prisma.UploadAuditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadAuditInclude<ExtArgs> | null
}


/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Tenant` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Tenant
 * TENANTS
 */
export type TenantModel = runtime.Types.Result.DefaultSelection<Prisma.$TenantPayload>

export type AggregateTenant = {
  _count: TenantCountAggregateOutputType | null
  _min: TenantMinAggregateOutputType | null
  _max: TenantMaxAggregateOutputType | null
}

export type TenantMinAggregateOutputType = {
  id: string | null
  name: string | null
  email: string | null
  slug: string | null
  createdAt: Date | null
  updatedAt: Date | null
  deletedAt: Date | null
}

export type TenantMaxAggregateOutputType = {
  id: string | null
  name: string | null
  email: string | null
  slug: string | null
  createdAt: Date | null
  updatedAt: Date | null
  deletedAt: Date | null
}

export type TenantCountAggregateOutputType = {
  id: number
  name: number
  email: number
  slug: number
  settings: number
  createdAt: number
  updatedAt: number
  deletedAt: number
  _all: number
}


export type TenantMinAggregateInputType = {
  id?: true
  name?: true
  email?: true
  slug?: true
  createdAt?: true
  updatedAt?: true
  deletedAt?: true
}

export type TenantMaxAggregateInputType = {
  id?: true
  name?: true
  email?: true
  slug?: true
  createdAt?: true
  updatedAt?: true
  deletedAt?: true
}

export type TenantCountAggregateInputType = {
  id?: true
  name?: true
  email?: true
  slug?: true
  settings?: true
  createdAt?: true
  updatedAt?: true
  deletedAt?: true
  _all?: true
}

export type TenantAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Tenant to aggregate.
   */
  where?: Prisma.TenantWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Tenants to fetch.
   */
  orderBy?: Prisma.TenantOrderByWithRelationInput | Prisma.TenantOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TenantWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Tenants from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Tenants.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Tenants
  **/
  _count?: true | TenantCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TenantMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TenantMaxAggregateInputType
}

export type GetTenantAggregateType<T extends TenantAggregateArgs> = {
      [P in keyof T & keyof AggregateTenant]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTenant[P]>
    : Prisma.GetScalarType<T[P], AggregateTenant[P]>
}




export type TenantGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TenantWhereInput
  orderBy?: Prisma.TenantOrderByWithAggregationInput | Prisma.TenantOrderByWithAggregationInput[]
  by: Prisma.TenantScalarFieldEnum[] | Prisma.TenantScalarFieldEnum
  having?: Prisma.TenantScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TenantCountAggregateInputType | true
  _min?: TenantMinAggregateInputType
  _max?: TenantMaxAggregateInputType
}

export type TenantGroupByOutputType = {
  id: string
  name: string
  email: string
  slug: string
  settings: runtime.JsonValue | null
  createdAt: Date
  updatedAt: Date | null
  deletedAt: Date | null
  _count: TenantCountAggregateOutputType | null
  _min: TenantMinAggregateOutputType | null
  _max: TenantMaxAggregateOutputType | null
}

type GetTenantGroupByPayload<T extends TenantGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TenantGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TenantGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TenantGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TenantGroupByOutputType[P]>
      }
    >
  >



export type TenantWhereInput = {
  AND?: Prisma.TenantWhereInput | Prisma.TenantWhereInput[]
  OR?: Prisma.TenantWhereInput[]
  NOT?: Prisma.TenantWhereInput | Prisma.TenantWhereInput[]
  id?: Prisma.UuidFilter<"Tenant"> | string
  name?: Prisma.StringFilter<"Tenant"> | string
  email?: Prisma.StringFilter<"Tenant"> | string
  slug?: Prisma.StringFilter<"Tenant"> | string
  settings?: Prisma.JsonNullableFilter<"Tenant">
  createdAt?: Prisma.DateTimeFilter<"Tenant"> | Date | string
  updatedAt?: Prisma.DateTimeNullableFilter<"Tenant"> | Date | string | null
  deletedAt?: Prisma.DateTimeNullableFilter<"Tenant"> | Date | string | null
  users?: Prisma.UserListRelationFilter
  files?: Prisma.UploadListRelationFilter
  uploads?: Prisma.UploadAuditListRelationFilter
  auditLogs?: Prisma.AuditLogListRelationFilter
  vendors?: Prisma.VendorListRelationFilter
  customers?: Prisma.CustomerListRelationFilter
  items?: Prisma.ItemListRelationFilter
  invoices?: Prisma.InvoiceListRelationFilter
  payments?: Prisma.PaymentListRelationFilter
  subscription?: Prisma.PackageSubscriptionListRelationFilter
  userSession?: Prisma.SessionListRelationFilter
  InvoiceItem?: Prisma.InvoiceItemListRelationFilter
}

export type TenantOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  settings?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  users?: Prisma.UserOrderByRelationAggregateInput
  files?: Prisma.UploadOrderByRelationAggregateInput
  uploads?: Prisma.UploadAuditOrderByRelationAggregateInput
  auditLogs?: Prisma.AuditLogOrderByRelationAggregateInput
  vendors?: Prisma.VendorOrderByRelationAggregateInput
  customers?: Prisma.CustomerOrderByRelationAggregateInput
  items?: Prisma.ItemOrderByRelationAggregateInput
  invoices?: Prisma.InvoiceOrderByRelationAggregateInput
  payments?: Prisma.PaymentOrderByRelationAggregateInput
  subscription?: Prisma.PackageSubscriptionOrderByRelationAggregateInput
  userSession?: Prisma.SessionOrderByRelationAggregateInput
  InvoiceItem?: Prisma.InvoiceItemOrderByRelationAggregateInput
}

export type TenantWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  slug?: string
  AND?: Prisma.TenantWhereInput | Prisma.TenantWhereInput[]
  OR?: Prisma.TenantWhereInput[]
  NOT?: Prisma.TenantWhereInput | Prisma.TenantWhereInput[]
  name?: Prisma.StringFilter<"Tenant"> | string
  email?: Prisma.StringFilter<"Tenant"> | string
  settings?: Prisma.JsonNullableFilter<"Tenant">
  createdAt?: Prisma.DateTimeFilter<"Tenant"> | Date | string
  updatedAt?: Prisma.DateTimeNullableFilter<"Tenant"> | Date | string | null
  deletedAt?: Prisma.DateTimeNullableFilter<"Tenant"> | Date | string | null
  users?: Prisma.UserListRelationFilter
  files?: Prisma.UploadListRelationFilter
  uploads?: Prisma.UploadAuditListRelationFilter
  auditLogs?: Prisma.AuditLogListRelationFilter
  vendors?: Prisma.VendorListRelationFilter
  customers?: Prisma.CustomerListRelationFilter
  items?: Prisma.ItemListRelationFilter
  invoices?: Prisma.InvoiceListRelationFilter
  payments?: Prisma.PaymentListRelationFilter
  subscription?: Prisma.PackageSubscriptionListRelationFilter
  userSession?: Prisma.SessionListRelationFilter
  InvoiceItem?: Prisma.InvoiceItemListRelationFilter
}, "id" | "slug">

export type TenantOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  settings?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.TenantCountOrderByAggregateInput
  _max?: Prisma.TenantMaxOrderByAggregateInput
  _min?: Prisma.TenantMinOrderByAggregateInput
}

export type TenantScalarWhereWithAggregatesInput = {
  AND?: Prisma.TenantScalarWhereWithAggregatesInput | Prisma.TenantScalarWhereWithAggregatesInput[]
  OR?: Prisma.TenantScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TenantScalarWhereWithAggregatesInput | Prisma.TenantScalarWhereWithAggregatesInput[]
  id?: Prisma.UuidWithAggregatesFilter<"Tenant"> | string
  name?: Prisma.StringWithAggregatesFilter<"Tenant"> | string
  email?: Prisma.StringWithAggregatesFilter<"Tenant"> | string
  slug?: Prisma.StringWithAggregatesFilter<"Tenant"> | string
  settings?: Prisma.JsonNullableWithAggregatesFilter<"Tenant">
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Tenant"> | Date | string
  updatedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"Tenant"> | Date | string | null
  deletedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"Tenant"> | Date | string | null
}

export type TenantCreateInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemCreateNestedManyWithoutTenantInput
}

export type TenantUncheckedCreateInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserUncheckedCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadUncheckedCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditUncheckedCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorUncheckedCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerUncheckedCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemUncheckedCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionUncheckedCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionUncheckedCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedCreateNestedManyWithoutTenantInput
}

export type TenantUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUpdateManyWithoutTenantNestedInput
}

export type TenantUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUncheckedUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUncheckedUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUncheckedUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUncheckedUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUncheckedUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUncheckedUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUncheckedUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUncheckedUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedUpdateManyWithoutTenantNestedInput
}

export type TenantCreateManyInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
}

export type TenantUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type TenantUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type TenantCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  settings?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
}

export type TenantMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
}

export type TenantMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
}

export type TenantScalarRelationFilter = {
  is?: Prisma.TenantWhereInput
  isNot?: Prisma.TenantWhereInput
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type TenantCreateNestedOneWithoutUsersInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutUsersInput, Prisma.TenantUncheckedCreateWithoutUsersInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutUsersInput
  connect?: Prisma.TenantWhereUniqueInput
}

export type TenantUpdateOneRequiredWithoutUsersNestedInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutUsersInput, Prisma.TenantUncheckedCreateWithoutUsersInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutUsersInput
  upsert?: Prisma.TenantUpsertWithoutUsersInput
  connect?: Prisma.TenantWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TenantUpdateToOneWithWhereWithoutUsersInput, Prisma.TenantUpdateWithoutUsersInput>, Prisma.TenantUncheckedUpdateWithoutUsersInput>
}

export type TenantCreateNestedOneWithoutUserSessionInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutUserSessionInput, Prisma.TenantUncheckedCreateWithoutUserSessionInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutUserSessionInput
  connect?: Prisma.TenantWhereUniqueInput
}

export type TenantUpdateOneRequiredWithoutUserSessionNestedInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutUserSessionInput, Prisma.TenantUncheckedCreateWithoutUserSessionInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutUserSessionInput
  upsert?: Prisma.TenantUpsertWithoutUserSessionInput
  connect?: Prisma.TenantWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TenantUpdateToOneWithWhereWithoutUserSessionInput, Prisma.TenantUpdateWithoutUserSessionInput>, Prisma.TenantUncheckedUpdateWithoutUserSessionInput>
}

export type TenantCreateNestedOneWithoutFilesInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutFilesInput, Prisma.TenantUncheckedCreateWithoutFilesInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutFilesInput
  connect?: Prisma.TenantWhereUniqueInput
}

export type TenantUpdateOneRequiredWithoutFilesNestedInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutFilesInput, Prisma.TenantUncheckedCreateWithoutFilesInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutFilesInput
  upsert?: Prisma.TenantUpsertWithoutFilesInput
  connect?: Prisma.TenantWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TenantUpdateToOneWithWhereWithoutFilesInput, Prisma.TenantUpdateWithoutFilesInput>, Prisma.TenantUncheckedUpdateWithoutFilesInput>
}

export type TenantCreateNestedOneWithoutUploadsInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutUploadsInput, Prisma.TenantUncheckedCreateWithoutUploadsInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutUploadsInput
  connect?: Prisma.TenantWhereUniqueInput
}

export type TenantUpdateOneRequiredWithoutUploadsNestedInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutUploadsInput, Prisma.TenantUncheckedCreateWithoutUploadsInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutUploadsInput
  upsert?: Prisma.TenantUpsertWithoutUploadsInput
  connect?: Prisma.TenantWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TenantUpdateToOneWithWhereWithoutUploadsInput, Prisma.TenantUpdateWithoutUploadsInput>, Prisma.TenantUncheckedUpdateWithoutUploadsInput>
}

export type TenantCreateNestedOneWithoutVendorsInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutVendorsInput, Prisma.TenantUncheckedCreateWithoutVendorsInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutVendorsInput
  connect?: Prisma.TenantWhereUniqueInput
}

export type TenantUpdateOneRequiredWithoutVendorsNestedInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutVendorsInput, Prisma.TenantUncheckedCreateWithoutVendorsInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutVendorsInput
  upsert?: Prisma.TenantUpsertWithoutVendorsInput
  connect?: Prisma.TenantWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TenantUpdateToOneWithWhereWithoutVendorsInput, Prisma.TenantUpdateWithoutVendorsInput>, Prisma.TenantUncheckedUpdateWithoutVendorsInput>
}

export type TenantCreateNestedOneWithoutCustomersInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutCustomersInput, Prisma.TenantUncheckedCreateWithoutCustomersInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutCustomersInput
  connect?: Prisma.TenantWhereUniqueInput
}

export type TenantUpdateOneRequiredWithoutCustomersNestedInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutCustomersInput, Prisma.TenantUncheckedCreateWithoutCustomersInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutCustomersInput
  upsert?: Prisma.TenantUpsertWithoutCustomersInput
  connect?: Prisma.TenantWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TenantUpdateToOneWithWhereWithoutCustomersInput, Prisma.TenantUpdateWithoutCustomersInput>, Prisma.TenantUncheckedUpdateWithoutCustomersInput>
}

export type TenantCreateNestedOneWithoutItemsInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutItemsInput, Prisma.TenantUncheckedCreateWithoutItemsInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutItemsInput
  connect?: Prisma.TenantWhereUniqueInput
}

export type TenantUpdateOneRequiredWithoutItemsNestedInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutItemsInput, Prisma.TenantUncheckedCreateWithoutItemsInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutItemsInput
  upsert?: Prisma.TenantUpsertWithoutItemsInput
  connect?: Prisma.TenantWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TenantUpdateToOneWithWhereWithoutItemsInput, Prisma.TenantUpdateWithoutItemsInput>, Prisma.TenantUncheckedUpdateWithoutItemsInput>
}

export type TenantCreateNestedOneWithoutSubscriptionInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutSubscriptionInput, Prisma.TenantUncheckedCreateWithoutSubscriptionInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutSubscriptionInput
  connect?: Prisma.TenantWhereUniqueInput
}

export type TenantUpdateOneRequiredWithoutSubscriptionNestedInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutSubscriptionInput, Prisma.TenantUncheckedCreateWithoutSubscriptionInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutSubscriptionInput
  upsert?: Prisma.TenantUpsertWithoutSubscriptionInput
  connect?: Prisma.TenantWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TenantUpdateToOneWithWhereWithoutSubscriptionInput, Prisma.TenantUpdateWithoutSubscriptionInput>, Prisma.TenantUncheckedUpdateWithoutSubscriptionInput>
}

export type TenantCreateNestedOneWithoutInvoicesInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutInvoicesInput, Prisma.TenantUncheckedCreateWithoutInvoicesInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutInvoicesInput
  connect?: Prisma.TenantWhereUniqueInput
}

export type TenantUpdateOneRequiredWithoutInvoicesNestedInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutInvoicesInput, Prisma.TenantUncheckedCreateWithoutInvoicesInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutInvoicesInput
  upsert?: Prisma.TenantUpsertWithoutInvoicesInput
  connect?: Prisma.TenantWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TenantUpdateToOneWithWhereWithoutInvoicesInput, Prisma.TenantUpdateWithoutInvoicesInput>, Prisma.TenantUncheckedUpdateWithoutInvoicesInput>
}

export type TenantCreateNestedOneWithoutInvoiceItemInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutInvoiceItemInput, Prisma.TenantUncheckedCreateWithoutInvoiceItemInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutInvoiceItemInput
  connect?: Prisma.TenantWhereUniqueInput
}

export type TenantUpdateOneRequiredWithoutInvoiceItemNestedInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutInvoiceItemInput, Prisma.TenantUncheckedCreateWithoutInvoiceItemInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutInvoiceItemInput
  upsert?: Prisma.TenantUpsertWithoutInvoiceItemInput
  connect?: Prisma.TenantWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TenantUpdateToOneWithWhereWithoutInvoiceItemInput, Prisma.TenantUpdateWithoutInvoiceItemInput>, Prisma.TenantUncheckedUpdateWithoutInvoiceItemInput>
}

export type TenantCreateNestedOneWithoutPaymentsInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutPaymentsInput, Prisma.TenantUncheckedCreateWithoutPaymentsInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutPaymentsInput
  connect?: Prisma.TenantWhereUniqueInput
}

export type TenantUpdateOneRequiredWithoutPaymentsNestedInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutPaymentsInput, Prisma.TenantUncheckedCreateWithoutPaymentsInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutPaymentsInput
  upsert?: Prisma.TenantUpsertWithoutPaymentsInput
  connect?: Prisma.TenantWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TenantUpdateToOneWithWhereWithoutPaymentsInput, Prisma.TenantUpdateWithoutPaymentsInput>, Prisma.TenantUncheckedUpdateWithoutPaymentsInput>
}

export type TenantCreateNestedOneWithoutAuditLogsInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutAuditLogsInput, Prisma.TenantUncheckedCreateWithoutAuditLogsInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutAuditLogsInput
  connect?: Prisma.TenantWhereUniqueInput
}

export type TenantUpdateOneRequiredWithoutAuditLogsNestedInput = {
  create?: Prisma.XOR<Prisma.TenantCreateWithoutAuditLogsInput, Prisma.TenantUncheckedCreateWithoutAuditLogsInput>
  connectOrCreate?: Prisma.TenantCreateOrConnectWithoutAuditLogsInput
  upsert?: Prisma.TenantUpsertWithoutAuditLogsInput
  connect?: Prisma.TenantWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TenantUpdateToOneWithWhereWithoutAuditLogsInput, Prisma.TenantUpdateWithoutAuditLogsInput>, Prisma.TenantUncheckedUpdateWithoutAuditLogsInput>
}

export type TenantCreateWithoutUsersInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  files?: Prisma.UploadCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemCreateNestedManyWithoutTenantInput
}

export type TenantUncheckedCreateWithoutUsersInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  files?: Prisma.UploadUncheckedCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditUncheckedCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorUncheckedCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerUncheckedCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemUncheckedCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionUncheckedCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionUncheckedCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedCreateNestedManyWithoutTenantInput
}

export type TenantCreateOrConnectWithoutUsersInput = {
  where: Prisma.TenantWhereUniqueInput
  create: Prisma.XOR<Prisma.TenantCreateWithoutUsersInput, Prisma.TenantUncheckedCreateWithoutUsersInput>
}

export type TenantUpsertWithoutUsersInput = {
  update: Prisma.XOR<Prisma.TenantUpdateWithoutUsersInput, Prisma.TenantUncheckedUpdateWithoutUsersInput>
  create: Prisma.XOR<Prisma.TenantCreateWithoutUsersInput, Prisma.TenantUncheckedCreateWithoutUsersInput>
  where?: Prisma.TenantWhereInput
}

export type TenantUpdateToOneWithWhereWithoutUsersInput = {
  where?: Prisma.TenantWhereInput
  data: Prisma.XOR<Prisma.TenantUpdateWithoutUsersInput, Prisma.TenantUncheckedUpdateWithoutUsersInput>
}

export type TenantUpdateWithoutUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  files?: Prisma.UploadUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUpdateManyWithoutTenantNestedInput
}

export type TenantUncheckedUpdateWithoutUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  files?: Prisma.UploadUncheckedUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUncheckedUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUncheckedUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUncheckedUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUncheckedUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUncheckedUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUncheckedUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedUpdateManyWithoutTenantNestedInput
}

export type TenantCreateWithoutUserSessionInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemCreateNestedManyWithoutTenantInput
}

export type TenantUncheckedCreateWithoutUserSessionInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserUncheckedCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadUncheckedCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditUncheckedCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorUncheckedCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerUncheckedCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemUncheckedCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionUncheckedCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedCreateNestedManyWithoutTenantInput
}

export type TenantCreateOrConnectWithoutUserSessionInput = {
  where: Prisma.TenantWhereUniqueInput
  create: Prisma.XOR<Prisma.TenantCreateWithoutUserSessionInput, Prisma.TenantUncheckedCreateWithoutUserSessionInput>
}

export type TenantUpsertWithoutUserSessionInput = {
  update: Prisma.XOR<Prisma.TenantUpdateWithoutUserSessionInput, Prisma.TenantUncheckedUpdateWithoutUserSessionInput>
  create: Prisma.XOR<Prisma.TenantCreateWithoutUserSessionInput, Prisma.TenantUncheckedCreateWithoutUserSessionInput>
  where?: Prisma.TenantWhereInput
}

export type TenantUpdateToOneWithWhereWithoutUserSessionInput = {
  where?: Prisma.TenantWhereInput
  data: Prisma.XOR<Prisma.TenantUpdateWithoutUserSessionInput, Prisma.TenantUncheckedUpdateWithoutUserSessionInput>
}

export type TenantUpdateWithoutUserSessionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUpdateManyWithoutTenantNestedInput
}

export type TenantUncheckedUpdateWithoutUserSessionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUncheckedUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUncheckedUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUncheckedUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUncheckedUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUncheckedUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUncheckedUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUncheckedUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedUpdateManyWithoutTenantNestedInput
}

export type TenantCreateWithoutFilesInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemCreateNestedManyWithoutTenantInput
}

export type TenantUncheckedCreateWithoutFilesInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserUncheckedCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditUncheckedCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorUncheckedCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerUncheckedCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemUncheckedCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionUncheckedCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionUncheckedCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedCreateNestedManyWithoutTenantInput
}

export type TenantCreateOrConnectWithoutFilesInput = {
  where: Prisma.TenantWhereUniqueInput
  create: Prisma.XOR<Prisma.TenantCreateWithoutFilesInput, Prisma.TenantUncheckedCreateWithoutFilesInput>
}

export type TenantUpsertWithoutFilesInput = {
  update: Prisma.XOR<Prisma.TenantUpdateWithoutFilesInput, Prisma.TenantUncheckedUpdateWithoutFilesInput>
  create: Prisma.XOR<Prisma.TenantCreateWithoutFilesInput, Prisma.TenantUncheckedCreateWithoutFilesInput>
  where?: Prisma.TenantWhereInput
}

export type TenantUpdateToOneWithWhereWithoutFilesInput = {
  where?: Prisma.TenantWhereInput
  data: Prisma.XOR<Prisma.TenantUpdateWithoutFilesInput, Prisma.TenantUncheckedUpdateWithoutFilesInput>
}

export type TenantUpdateWithoutFilesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUpdateManyWithoutTenantNestedInput
}

export type TenantUncheckedUpdateWithoutFilesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUncheckedUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUncheckedUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUncheckedUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUncheckedUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUncheckedUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUncheckedUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUncheckedUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedUpdateManyWithoutTenantNestedInput
}

export type TenantCreateWithoutUploadsInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemCreateNestedManyWithoutTenantInput
}

export type TenantUncheckedCreateWithoutUploadsInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserUncheckedCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadUncheckedCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorUncheckedCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerUncheckedCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemUncheckedCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionUncheckedCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionUncheckedCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedCreateNestedManyWithoutTenantInput
}

export type TenantCreateOrConnectWithoutUploadsInput = {
  where: Prisma.TenantWhereUniqueInput
  create: Prisma.XOR<Prisma.TenantCreateWithoutUploadsInput, Prisma.TenantUncheckedCreateWithoutUploadsInput>
}

export type TenantUpsertWithoutUploadsInput = {
  update: Prisma.XOR<Prisma.TenantUpdateWithoutUploadsInput, Prisma.TenantUncheckedUpdateWithoutUploadsInput>
  create: Prisma.XOR<Prisma.TenantCreateWithoutUploadsInput, Prisma.TenantUncheckedCreateWithoutUploadsInput>
  where?: Prisma.TenantWhereInput
}

export type TenantUpdateToOneWithWhereWithoutUploadsInput = {
  where?: Prisma.TenantWhereInput
  data: Prisma.XOR<Prisma.TenantUpdateWithoutUploadsInput, Prisma.TenantUncheckedUpdateWithoutUploadsInput>
}

export type TenantUpdateWithoutUploadsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUpdateManyWithoutTenantNestedInput
}

export type TenantUncheckedUpdateWithoutUploadsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUncheckedUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUncheckedUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUncheckedUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUncheckedUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUncheckedUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUncheckedUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUncheckedUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedUpdateManyWithoutTenantNestedInput
}

export type TenantCreateWithoutVendorsInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemCreateNestedManyWithoutTenantInput
}

export type TenantUncheckedCreateWithoutVendorsInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserUncheckedCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadUncheckedCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditUncheckedCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerUncheckedCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemUncheckedCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionUncheckedCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionUncheckedCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedCreateNestedManyWithoutTenantInput
}

export type TenantCreateOrConnectWithoutVendorsInput = {
  where: Prisma.TenantWhereUniqueInput
  create: Prisma.XOR<Prisma.TenantCreateWithoutVendorsInput, Prisma.TenantUncheckedCreateWithoutVendorsInput>
}

export type TenantUpsertWithoutVendorsInput = {
  update: Prisma.XOR<Prisma.TenantUpdateWithoutVendorsInput, Prisma.TenantUncheckedUpdateWithoutVendorsInput>
  create: Prisma.XOR<Prisma.TenantCreateWithoutVendorsInput, Prisma.TenantUncheckedCreateWithoutVendorsInput>
  where?: Prisma.TenantWhereInput
}

export type TenantUpdateToOneWithWhereWithoutVendorsInput = {
  where?: Prisma.TenantWhereInput
  data: Prisma.XOR<Prisma.TenantUpdateWithoutVendorsInput, Prisma.TenantUncheckedUpdateWithoutVendorsInput>
}

export type TenantUpdateWithoutVendorsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUpdateManyWithoutTenantNestedInput
}

export type TenantUncheckedUpdateWithoutVendorsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUncheckedUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUncheckedUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUncheckedUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUncheckedUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUncheckedUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUncheckedUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUncheckedUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedUpdateManyWithoutTenantNestedInput
}

export type TenantCreateWithoutCustomersInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemCreateNestedManyWithoutTenantInput
}

export type TenantUncheckedCreateWithoutCustomersInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserUncheckedCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadUncheckedCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditUncheckedCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorUncheckedCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemUncheckedCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionUncheckedCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionUncheckedCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedCreateNestedManyWithoutTenantInput
}

export type TenantCreateOrConnectWithoutCustomersInput = {
  where: Prisma.TenantWhereUniqueInput
  create: Prisma.XOR<Prisma.TenantCreateWithoutCustomersInput, Prisma.TenantUncheckedCreateWithoutCustomersInput>
}

export type TenantUpsertWithoutCustomersInput = {
  update: Prisma.XOR<Prisma.TenantUpdateWithoutCustomersInput, Prisma.TenantUncheckedUpdateWithoutCustomersInput>
  create: Prisma.XOR<Prisma.TenantCreateWithoutCustomersInput, Prisma.TenantUncheckedCreateWithoutCustomersInput>
  where?: Prisma.TenantWhereInput
}

export type TenantUpdateToOneWithWhereWithoutCustomersInput = {
  where?: Prisma.TenantWhereInput
  data: Prisma.XOR<Prisma.TenantUpdateWithoutCustomersInput, Prisma.TenantUncheckedUpdateWithoutCustomersInput>
}

export type TenantUpdateWithoutCustomersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUpdateManyWithoutTenantNestedInput
}

export type TenantUncheckedUpdateWithoutCustomersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUncheckedUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUncheckedUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUncheckedUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUncheckedUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUncheckedUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUncheckedUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUncheckedUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedUpdateManyWithoutTenantNestedInput
}

export type TenantCreateWithoutItemsInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemCreateNestedManyWithoutTenantInput
}

export type TenantUncheckedCreateWithoutItemsInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserUncheckedCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadUncheckedCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditUncheckedCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorUncheckedCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerUncheckedCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionUncheckedCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionUncheckedCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedCreateNestedManyWithoutTenantInput
}

export type TenantCreateOrConnectWithoutItemsInput = {
  where: Prisma.TenantWhereUniqueInput
  create: Prisma.XOR<Prisma.TenantCreateWithoutItemsInput, Prisma.TenantUncheckedCreateWithoutItemsInput>
}

export type TenantUpsertWithoutItemsInput = {
  update: Prisma.XOR<Prisma.TenantUpdateWithoutItemsInput, Prisma.TenantUncheckedUpdateWithoutItemsInput>
  create: Prisma.XOR<Prisma.TenantCreateWithoutItemsInput, Prisma.TenantUncheckedCreateWithoutItemsInput>
  where?: Prisma.TenantWhereInput
}

export type TenantUpdateToOneWithWhereWithoutItemsInput = {
  where?: Prisma.TenantWhereInput
  data: Prisma.XOR<Prisma.TenantUpdateWithoutItemsInput, Prisma.TenantUncheckedUpdateWithoutItemsInput>
}

export type TenantUpdateWithoutItemsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUpdateManyWithoutTenantNestedInput
}

export type TenantUncheckedUpdateWithoutItemsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUncheckedUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUncheckedUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUncheckedUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUncheckedUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUncheckedUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUncheckedUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUncheckedUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedUpdateManyWithoutTenantNestedInput
}

export type TenantCreateWithoutSubscriptionInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemCreateNestedManyWithoutTenantInput
}

export type TenantUncheckedCreateWithoutSubscriptionInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserUncheckedCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadUncheckedCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditUncheckedCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorUncheckedCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerUncheckedCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemUncheckedCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionUncheckedCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedCreateNestedManyWithoutTenantInput
}

export type TenantCreateOrConnectWithoutSubscriptionInput = {
  where: Prisma.TenantWhereUniqueInput
  create: Prisma.XOR<Prisma.TenantCreateWithoutSubscriptionInput, Prisma.TenantUncheckedCreateWithoutSubscriptionInput>
}

export type TenantUpsertWithoutSubscriptionInput = {
  update: Prisma.XOR<Prisma.TenantUpdateWithoutSubscriptionInput, Prisma.TenantUncheckedUpdateWithoutSubscriptionInput>
  create: Prisma.XOR<Prisma.TenantCreateWithoutSubscriptionInput, Prisma.TenantUncheckedCreateWithoutSubscriptionInput>
  where?: Prisma.TenantWhereInput
}

export type TenantUpdateToOneWithWhereWithoutSubscriptionInput = {
  where?: Prisma.TenantWhereInput
  data: Prisma.XOR<Prisma.TenantUpdateWithoutSubscriptionInput, Prisma.TenantUncheckedUpdateWithoutSubscriptionInput>
}

export type TenantUpdateWithoutSubscriptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUpdateManyWithoutTenantNestedInput
}

export type TenantUncheckedUpdateWithoutSubscriptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUncheckedUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUncheckedUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUncheckedUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUncheckedUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUncheckedUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUncheckedUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUncheckedUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedUpdateManyWithoutTenantNestedInput
}

export type TenantCreateWithoutInvoicesInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemCreateNestedManyWithoutTenantInput
}

export type TenantUncheckedCreateWithoutInvoicesInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserUncheckedCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadUncheckedCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditUncheckedCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorUncheckedCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerUncheckedCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemUncheckedCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionUncheckedCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionUncheckedCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedCreateNestedManyWithoutTenantInput
}

export type TenantCreateOrConnectWithoutInvoicesInput = {
  where: Prisma.TenantWhereUniqueInput
  create: Prisma.XOR<Prisma.TenantCreateWithoutInvoicesInput, Prisma.TenantUncheckedCreateWithoutInvoicesInput>
}

export type TenantUpsertWithoutInvoicesInput = {
  update: Prisma.XOR<Prisma.TenantUpdateWithoutInvoicesInput, Prisma.TenantUncheckedUpdateWithoutInvoicesInput>
  create: Prisma.XOR<Prisma.TenantCreateWithoutInvoicesInput, Prisma.TenantUncheckedCreateWithoutInvoicesInput>
  where?: Prisma.TenantWhereInput
}

export type TenantUpdateToOneWithWhereWithoutInvoicesInput = {
  where?: Prisma.TenantWhereInput
  data: Prisma.XOR<Prisma.TenantUpdateWithoutInvoicesInput, Prisma.TenantUncheckedUpdateWithoutInvoicesInput>
}

export type TenantUpdateWithoutInvoicesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUpdateManyWithoutTenantNestedInput
}

export type TenantUncheckedUpdateWithoutInvoicesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUncheckedUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUncheckedUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUncheckedUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUncheckedUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUncheckedUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUncheckedUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUncheckedUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUncheckedUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedUpdateManyWithoutTenantNestedInput
}

export type TenantCreateWithoutInvoiceItemInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionCreateNestedManyWithoutTenantInput
}

export type TenantUncheckedCreateWithoutInvoiceItemInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserUncheckedCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadUncheckedCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditUncheckedCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorUncheckedCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerUncheckedCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemUncheckedCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionUncheckedCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionUncheckedCreateNestedManyWithoutTenantInput
}

export type TenantCreateOrConnectWithoutInvoiceItemInput = {
  where: Prisma.TenantWhereUniqueInput
  create: Prisma.XOR<Prisma.TenantCreateWithoutInvoiceItemInput, Prisma.TenantUncheckedCreateWithoutInvoiceItemInput>
}

export type TenantUpsertWithoutInvoiceItemInput = {
  update: Prisma.XOR<Prisma.TenantUpdateWithoutInvoiceItemInput, Prisma.TenantUncheckedUpdateWithoutInvoiceItemInput>
  create: Prisma.XOR<Prisma.TenantCreateWithoutInvoiceItemInput, Prisma.TenantUncheckedCreateWithoutInvoiceItemInput>
  where?: Prisma.TenantWhereInput
}

export type TenantUpdateToOneWithWhereWithoutInvoiceItemInput = {
  where?: Prisma.TenantWhereInput
  data: Prisma.XOR<Prisma.TenantUpdateWithoutInvoiceItemInput, Prisma.TenantUncheckedUpdateWithoutInvoiceItemInput>
}

export type TenantUpdateWithoutInvoiceItemInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUpdateManyWithoutTenantNestedInput
}

export type TenantUncheckedUpdateWithoutInvoiceItemInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUncheckedUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUncheckedUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUncheckedUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUncheckedUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUncheckedUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUncheckedUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUncheckedUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUncheckedUpdateManyWithoutTenantNestedInput
}

export type TenantCreateWithoutPaymentsInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemCreateNestedManyWithoutTenantInput
}

export type TenantUncheckedCreateWithoutPaymentsInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserUncheckedCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadUncheckedCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditUncheckedCreateNestedManyWithoutTenantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorUncheckedCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerUncheckedCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemUncheckedCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionUncheckedCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionUncheckedCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedCreateNestedManyWithoutTenantInput
}

export type TenantCreateOrConnectWithoutPaymentsInput = {
  where: Prisma.TenantWhereUniqueInput
  create: Prisma.XOR<Prisma.TenantCreateWithoutPaymentsInput, Prisma.TenantUncheckedCreateWithoutPaymentsInput>
}

export type TenantUpsertWithoutPaymentsInput = {
  update: Prisma.XOR<Prisma.TenantUpdateWithoutPaymentsInput, Prisma.TenantUncheckedUpdateWithoutPaymentsInput>
  create: Prisma.XOR<Prisma.TenantCreateWithoutPaymentsInput, Prisma.TenantUncheckedCreateWithoutPaymentsInput>
  where?: Prisma.TenantWhereInput
}

export type TenantUpdateToOneWithWhereWithoutPaymentsInput = {
  where?: Prisma.TenantWhereInput
  data: Prisma.XOR<Prisma.TenantUpdateWithoutPaymentsInput, Prisma.TenantUncheckedUpdateWithoutPaymentsInput>
}

export type TenantUpdateWithoutPaymentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUpdateManyWithoutTenantNestedInput
}

export type TenantUncheckedUpdateWithoutPaymentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUncheckedUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUncheckedUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUncheckedUpdateManyWithoutTenantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUncheckedUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUncheckedUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUncheckedUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUncheckedUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUncheckedUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedUpdateManyWithoutTenantNestedInput
}

export type TenantCreateWithoutAuditLogsInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemCreateNestedManyWithoutTenantInput
}

export type TenantUncheckedCreateWithoutAuditLogsInput = {
  id?: string
  name: string
  email: string
  slug: string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string | null
  deletedAt?: Date | string | null
  users?: Prisma.UserUncheckedCreateNestedManyWithoutTenantInput
  files?: Prisma.UploadUncheckedCreateNestedManyWithoutTenantInput
  uploads?: Prisma.UploadAuditUncheckedCreateNestedManyWithoutTenantInput
  vendors?: Prisma.VendorUncheckedCreateNestedManyWithoutTenantInput
  customers?: Prisma.CustomerUncheckedCreateNestedManyWithoutTenantInput
  items?: Prisma.ItemUncheckedCreateNestedManyWithoutTenantInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutTenantInput
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutTenantInput
  subscription?: Prisma.PackageSubscriptionUncheckedCreateNestedManyWithoutTenantInput
  userSession?: Prisma.SessionUncheckedCreateNestedManyWithoutTenantInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedCreateNestedManyWithoutTenantInput
}

export type TenantCreateOrConnectWithoutAuditLogsInput = {
  where: Prisma.TenantWhereUniqueInput
  create: Prisma.XOR<Prisma.TenantCreateWithoutAuditLogsInput, Prisma.TenantUncheckedCreateWithoutAuditLogsInput>
}

export type TenantUpsertWithoutAuditLogsInput = {
  update: Prisma.XOR<Prisma.TenantUpdateWithoutAuditLogsInput, Prisma.TenantUncheckedUpdateWithoutAuditLogsInput>
  create: Prisma.XOR<Prisma.TenantCreateWithoutAuditLogsInput, Prisma.TenantUncheckedCreateWithoutAuditLogsInput>
  where?: Prisma.TenantWhereInput
}

export type TenantUpdateToOneWithWhereWithoutAuditLogsInput = {
  where?: Prisma.TenantWhereInput
  data: Prisma.XOR<Prisma.TenantUpdateWithoutAuditLogsInput, Prisma.TenantUncheckedUpdateWithoutAuditLogsInput>
}

export type TenantUpdateWithoutAuditLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUpdateManyWithoutTenantNestedInput
}

export type TenantUncheckedUpdateWithoutAuditLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.UserUncheckedUpdateManyWithoutTenantNestedInput
  files?: Prisma.UploadUncheckedUpdateManyWithoutTenantNestedInput
  uploads?: Prisma.UploadAuditUncheckedUpdateManyWithoutTenantNestedInput
  vendors?: Prisma.VendorUncheckedUpdateManyWithoutTenantNestedInput
  customers?: Prisma.CustomerUncheckedUpdateManyWithoutTenantNestedInput
  items?: Prisma.ItemUncheckedUpdateManyWithoutTenantNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutTenantNestedInput
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutTenantNestedInput
  subscription?: Prisma.PackageSubscriptionUncheckedUpdateManyWithoutTenantNestedInput
  userSession?: Prisma.SessionUncheckedUpdateManyWithoutTenantNestedInput
  InvoiceItem?: Prisma.InvoiceItemUncheckedUpdateManyWithoutTenantNestedInput
}


/**
 * Count Type TenantCountOutputType
 */

export type TenantCountOutputType = {
  users: number
  files: number
  uploads: number
  auditLogs: number
  vendors: number
  customers: number
  items: number
  invoices: number
  payments: number
  subscription: number
  userSession: number
  InvoiceItem: number
}

export type TenantCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  users?: boolean | TenantCountOutputTypeCountUsersArgs
  files?: boolean | TenantCountOutputTypeCountFilesArgs
  uploads?: boolean | TenantCountOutputTypeCountUploadsArgs
  auditLogs?: boolean | TenantCountOutputTypeCountAuditLogsArgs
  vendors?: boolean | TenantCountOutputTypeCountVendorsArgs
  customers?: boolean | TenantCountOutputTypeCountCustomersArgs
  items?: boolean | TenantCountOutputTypeCountItemsArgs
  invoices?: boolean | TenantCountOutputTypeCountInvoicesArgs
  payments?: boolean | TenantCountOutputTypeCountPaymentsArgs
  subscription?: boolean | TenantCountOutputTypeCountSubscriptionArgs
  userSession?: boolean | TenantCountOutputTypeCountUserSessionArgs
  InvoiceItem?: boolean | TenantCountOutputTypeCountInvoiceItemArgs
}

/**
 * TenantCountOutputType without action
 */
export type TenantCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TenantCountOutputType
   */
  select?: Prisma.TenantCountOutputTypeSelect<ExtArgs> | null
}

/**
 * TenantCountOutputType without action
 */
export type TenantCountOutputTypeCountUsersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserWhereInput
}

/**
 * TenantCountOutputType without action
 */
export type TenantCountOutputTypeCountFilesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UploadWhereInput
}

/**
 * TenantCountOutputType without action
 */
export type TenantCountOutputTypeCountUploadsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UploadAuditWhereInput
}

/**
 * TenantCountOutputType without action
 */
export type TenantCountOutputTypeCountAuditLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AuditLogWhereInput
}

/**
 * TenantCountOutputType without action
 */
export type TenantCountOutputTypeCountVendorsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.VendorWhereInput
}

/**
 * TenantCountOutputType without action
 */
export type TenantCountOutputTypeCountCustomersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.CustomerWhereInput
}

/**
 * TenantCountOutputType without action
 */
export type TenantCountOutputTypeCountItemsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ItemWhereInput
}

/**
 * TenantCountOutputType without action
 */
export type TenantCountOutputTypeCountInvoicesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.InvoiceWhereInput
}

/**
 * TenantCountOutputType without action
 */
export type TenantCountOutputTypeCountPaymentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PaymentWhereInput
}

/**
 * TenantCountOutputType without action
 */
export type TenantCountOutputTypeCountSubscriptionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PackageSubscriptionWhereInput
}

/**
 * TenantCountOutputType without action
 */
export type TenantCountOutputTypeCountUserSessionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SessionWhereInput
}

/**
 * TenantCountOutputType without action
 */
export type TenantCountOutputTypeCountInvoiceItemArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.InvoiceItemWhereInput
}


export type TenantSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  email?: boolean
  slug?: boolean
  settings?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  deletedAt?: boolean
  users?: boolean | Prisma.Tenant$usersArgs<ExtArgs>
  files?: boolean | Prisma.Tenant$filesArgs<ExtArgs>
  uploads?: boolean | Prisma.Tenant$uploadsArgs<ExtArgs>
  auditLogs?: boolean | Prisma.Tenant$auditLogsArgs<ExtArgs>
  vendors?: boolean | Prisma.Tenant$vendorsArgs<ExtArgs>
  customers?: boolean | Prisma.Tenant$customersArgs<ExtArgs>
  items?: boolean | Prisma.Tenant$itemsArgs<ExtArgs>
  invoices?: boolean | Prisma.Tenant$invoicesArgs<ExtArgs>
  payments?: boolean | Prisma.Tenant$paymentsArgs<ExtArgs>
  subscription?: boolean | Prisma.Tenant$subscriptionArgs<ExtArgs>
  userSession?: boolean | Prisma.Tenant$userSessionArgs<ExtArgs>
  InvoiceItem?: boolean | Prisma.Tenant$InvoiceItemArgs<ExtArgs>
  _count?: boolean | Prisma.TenantCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["tenant"]>

export type TenantSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  email?: boolean
  slug?: boolean
  settings?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  deletedAt?: boolean
}, ExtArgs["result"]["tenant"]>

export type TenantSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  email?: boolean
  slug?: boolean
  settings?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  deletedAt?: boolean
}, ExtArgs["result"]["tenant"]>

export type TenantSelectScalar = {
  id?: boolean
  name?: boolean
  email?: boolean
  slug?: boolean
  settings?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  deletedAt?: boolean
}

export type TenantOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "email" | "slug" | "settings" | "createdAt" | "updatedAt" | "deletedAt", ExtArgs["result"]["tenant"]>
export type TenantInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  users?: boolean | Prisma.Tenant$usersArgs<ExtArgs>
  files?: boolean | Prisma.Tenant$filesArgs<ExtArgs>
  uploads?: boolean | Prisma.Tenant$uploadsArgs<ExtArgs>
  auditLogs?: boolean | Prisma.Tenant$auditLogsArgs<ExtArgs>
  vendors?: boolean | Prisma.Tenant$vendorsArgs<ExtArgs>
  customers?: boolean | Prisma.Tenant$customersArgs<ExtArgs>
  items?: boolean | Prisma.Tenant$itemsArgs<ExtArgs>
  invoices?: boolean | Prisma.Tenant$invoicesArgs<ExtArgs>
  payments?: boolean | Prisma.Tenant$paymentsArgs<ExtArgs>
  subscription?: boolean | Prisma.Tenant$subscriptionArgs<ExtArgs>
  userSession?: boolean | Prisma.Tenant$userSessionArgs<ExtArgs>
  InvoiceItem?: boolean | Prisma.Tenant$InvoiceItemArgs<ExtArgs>
  _count?: boolean | Prisma.TenantCountOutputTypeDefaultArgs<ExtArgs>
}
export type TenantIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type TenantIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $TenantPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Tenant"
  objects: {
    users: Prisma.$UserPayload<ExtArgs>[]
    files: Prisma.$UploadPayload<ExtArgs>[]
    uploads: Prisma.$UploadAuditPayload<ExtArgs>[]
    auditLogs: Prisma.$AuditLogPayload<ExtArgs>[]
    vendors: Prisma.$VendorPayload<ExtArgs>[]
    customers: Prisma.$CustomerPayload<ExtArgs>[]
    items: Prisma.$ItemPayload<ExtArgs>[]
    invoices: Prisma.$InvoicePayload<ExtArgs>[]
    payments: Prisma.$PaymentPayload<ExtArgs>[]
    subscription: Prisma.$PackageSubscriptionPayload<ExtArgs>[]
    userSession: Prisma.$SessionPayload<ExtArgs>[]
    InvoiceItem: Prisma.$InvoiceItemPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    email: string
    slug: string
    settings: runtime.JsonValue | null
    createdAt: Date
    updatedAt: Date | null
    deletedAt: Date | null
  }, ExtArgs["result"]["tenant"]>
  composites: {}
}

export type TenantGetPayload<S extends boolean | null | undefined | TenantDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TenantPayload, S>

export type TenantCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TenantFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TenantCountAggregateInputType | true
  }

export interface TenantDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tenant'], meta: { name: 'Tenant' } }
  /**
   * Find zero or one Tenant that matches the filter.
   * @param {TenantFindUniqueArgs} args - Arguments to find a Tenant
   * @example
   * // Get one Tenant
   * const tenant = await prisma.tenant.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TenantFindUniqueArgs>(args: Prisma.SelectSubset<T, TenantFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TenantClient<runtime.Types.Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Tenant that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TenantFindUniqueOrThrowArgs} args - Arguments to find a Tenant
   * @example
   * // Get one Tenant
   * const tenant = await prisma.tenant.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TenantFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TenantFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TenantClient<runtime.Types.Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Tenant that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TenantFindFirstArgs} args - Arguments to find a Tenant
   * @example
   * // Get one Tenant
   * const tenant = await prisma.tenant.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TenantFindFirstArgs>(args?: Prisma.SelectSubset<T, TenantFindFirstArgs<ExtArgs>>): Prisma.Prisma__TenantClient<runtime.Types.Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Tenant that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TenantFindFirstOrThrowArgs} args - Arguments to find a Tenant
   * @example
   * // Get one Tenant
   * const tenant = await prisma.tenant.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TenantFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TenantFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TenantClient<runtime.Types.Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Tenants that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TenantFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Tenants
   * const tenants = await prisma.tenant.findMany()
   * 
   * // Get first 10 Tenants
   * const tenants = await prisma.tenant.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const tenantWithIdOnly = await prisma.tenant.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TenantFindManyArgs>(args?: Prisma.SelectSubset<T, TenantFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Tenant.
   * @param {TenantCreateArgs} args - Arguments to create a Tenant.
   * @example
   * // Create one Tenant
   * const Tenant = await prisma.tenant.create({
   *   data: {
   *     // ... data to create a Tenant
   *   }
   * })
   * 
   */
  create<T extends TenantCreateArgs>(args: Prisma.SelectSubset<T, TenantCreateArgs<ExtArgs>>): Prisma.Prisma__TenantClient<runtime.Types.Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Tenants.
   * @param {TenantCreateManyArgs} args - Arguments to create many Tenants.
   * @example
   * // Create many Tenants
   * const tenant = await prisma.tenant.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TenantCreateManyArgs>(args?: Prisma.SelectSubset<T, TenantCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Tenants and returns the data saved in the database.
   * @param {TenantCreateManyAndReturnArgs} args - Arguments to create many Tenants.
   * @example
   * // Create many Tenants
   * const tenant = await prisma.tenant.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Tenants and only return the `id`
   * const tenantWithIdOnly = await prisma.tenant.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends TenantCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, TenantCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Tenant.
   * @param {TenantDeleteArgs} args - Arguments to delete one Tenant.
   * @example
   * // Delete one Tenant
   * const Tenant = await prisma.tenant.delete({
   *   where: {
   *     // ... filter to delete one Tenant
   *   }
   * })
   * 
   */
  delete<T extends TenantDeleteArgs>(args: Prisma.SelectSubset<T, TenantDeleteArgs<ExtArgs>>): Prisma.Prisma__TenantClient<runtime.Types.Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Tenant.
   * @param {TenantUpdateArgs} args - Arguments to update one Tenant.
   * @example
   * // Update one Tenant
   * const tenant = await prisma.tenant.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TenantUpdateArgs>(args: Prisma.SelectSubset<T, TenantUpdateArgs<ExtArgs>>): Prisma.Prisma__TenantClient<runtime.Types.Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Tenants.
   * @param {TenantDeleteManyArgs} args - Arguments to filter Tenants to delete.
   * @example
   * // Delete a few Tenants
   * const { count } = await prisma.tenant.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TenantDeleteManyArgs>(args?: Prisma.SelectSubset<T, TenantDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Tenants.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TenantUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Tenants
   * const tenant = await prisma.tenant.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TenantUpdateManyArgs>(args: Prisma.SelectSubset<T, TenantUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Tenants and returns the data updated in the database.
   * @param {TenantUpdateManyAndReturnArgs} args - Arguments to update many Tenants.
   * @example
   * // Update many Tenants
   * const tenant = await prisma.tenant.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Tenants and only return the `id`
   * const tenantWithIdOnly = await prisma.tenant.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends TenantUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, TenantUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Tenant.
   * @param {TenantUpsertArgs} args - Arguments to update or create a Tenant.
   * @example
   * // Update or create a Tenant
   * const tenant = await prisma.tenant.upsert({
   *   create: {
   *     // ... data to create a Tenant
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Tenant we want to update
   *   }
   * })
   */
  upsert<T extends TenantUpsertArgs>(args: Prisma.SelectSubset<T, TenantUpsertArgs<ExtArgs>>): Prisma.Prisma__TenantClient<runtime.Types.Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Tenants.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TenantCountArgs} args - Arguments to filter Tenants to count.
   * @example
   * // Count the number of Tenants
   * const count = await prisma.tenant.count({
   *   where: {
   *     // ... the filter for the Tenants we want to count
   *   }
   * })
  **/
  count<T extends TenantCountArgs>(
    args?: Prisma.Subset<T, TenantCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TenantCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Tenant.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TenantAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TenantAggregateArgs>(args: Prisma.Subset<T, TenantAggregateArgs>): Prisma.PrismaPromise<GetTenantAggregateType<T>>

  /**
   * Group by Tenant.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TenantGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TenantGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TenantGroupByArgs['orderBy'] }
      : { orderBy?: TenantGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TenantGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTenantGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Tenant model
 */
readonly fields: TenantFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Tenant.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TenantClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  users<T extends Prisma.Tenant$usersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Tenant$usersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  files<T extends Prisma.Tenant$filesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Tenant$filesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UploadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  uploads<T extends Prisma.Tenant$uploadsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Tenant$uploadsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UploadAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  auditLogs<T extends Prisma.Tenant$auditLogsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Tenant$auditLogsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  vendors<T extends Prisma.Tenant$vendorsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Tenant$vendorsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  customers<T extends Prisma.Tenant$customersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Tenant$customersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  items<T extends Prisma.Tenant$itemsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Tenant$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  invoices<T extends Prisma.Tenant$invoicesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Tenant$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  payments<T extends Prisma.Tenant$paymentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Tenant$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  subscription<T extends Prisma.Tenant$subscriptionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Tenant$subscriptionArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PackageSubscriptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  userSession<T extends Prisma.Tenant$userSessionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Tenant$userSessionArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  InvoiceItem<T extends Prisma.Tenant$InvoiceItemArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Tenant$InvoiceItemArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InvoiceItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Tenant model
 */
export interface TenantFieldRefs {
  readonly id: Prisma.FieldRef<"Tenant", 'String'>
  readonly name: Prisma.FieldRef<"Tenant", 'String'>
  readonly email: Prisma.FieldRef<"Tenant", 'String'>
  readonly slug: Prisma.FieldRef<"Tenant", 'String'>
  readonly settings: Prisma.FieldRef<"Tenant", 'Json'>
  readonly createdAt: Prisma.FieldRef<"Tenant", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Tenant", 'DateTime'>
  readonly deletedAt: Prisma.FieldRef<"Tenant", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Tenant findUnique
 */
export type TenantFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tenant
   */
  select?: Prisma.TenantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tenant
   */
  omit?: Prisma.TenantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TenantInclude<ExtArgs> | null
  /**
   * Filter, which Tenant to fetch.
   */
  where: Prisma.TenantWhereUniqueInput
}

/**
 * Tenant findUniqueOrThrow
 */
export type TenantFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tenant
   */
  select?: Prisma.TenantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tenant
   */
  omit?: Prisma.TenantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TenantInclude<ExtArgs> | null
  /**
   * Filter, which Tenant to fetch.
   */
  where: Prisma.TenantWhereUniqueInput
}

/**
 * Tenant findFirst
 */
export type TenantFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tenant
   */
  select?: Prisma.TenantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tenant
   */
  omit?: Prisma.TenantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TenantInclude<ExtArgs> | null
  /**
   * Filter, which Tenant to fetch.
   */
  where?: Prisma.TenantWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Tenants to fetch.
   */
  orderBy?: Prisma.TenantOrderByWithRelationInput | Prisma.TenantOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Tenants.
   */
  cursor?: Prisma.TenantWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Tenants from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Tenants.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Tenants.
   */
  distinct?: Prisma.TenantScalarFieldEnum | Prisma.TenantScalarFieldEnum[]
}

/**
 * Tenant findFirstOrThrow
 */
export type TenantFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tenant
   */
  select?: Prisma.TenantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tenant
   */
  omit?: Prisma.TenantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TenantInclude<ExtArgs> | null
  /**
   * Filter, which Tenant to fetch.
   */
  where?: Prisma.TenantWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Tenants to fetch.
   */
  orderBy?: Prisma.TenantOrderByWithRelationInput | Prisma.TenantOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Tenants.
   */
  cursor?: Prisma.TenantWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Tenants from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Tenants.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Tenants.
   */
  distinct?: Prisma.TenantScalarFieldEnum | Prisma.TenantScalarFieldEnum[]
}

/**
 * Tenant findMany
 */
export type TenantFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tenant
   */
  select?: Prisma.TenantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tenant
   */
  omit?: Prisma.TenantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TenantInclude<ExtArgs> | null
  /**
   * Filter, which Tenants to fetch.
   */
  where?: Prisma.TenantWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Tenants to fetch.
   */
  orderBy?: Prisma.TenantOrderByWithRelationInput | Prisma.TenantOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Tenants.
   */
  cursor?: Prisma.TenantWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Tenants from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Tenants.
   */
  skip?: number
  distinct?: Prisma.TenantScalarFieldEnum | Prisma.TenantScalarFieldEnum[]
}

/**
 * Tenant create
 */
export type TenantCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tenant
   */
  select?: Prisma.TenantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tenant
   */
  omit?: Prisma.TenantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TenantInclude<ExtArgs> | null
  /**
   * The data needed to create a Tenant.
   */
  data: Prisma.XOR<Prisma.TenantCreateInput, Prisma.TenantUncheckedCreateInput>
}

/**
 * Tenant createMany
 */
export type TenantCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Tenants.
   */
  data: Prisma.TenantCreateManyInput | Prisma.TenantCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Tenant createManyAndReturn
 */
export type TenantCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tenant
   */
  select?: Prisma.TenantSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Tenant
   */
  omit?: Prisma.TenantOmit<ExtArgs> | null
  /**
   * The data used to create many Tenants.
   */
  data: Prisma.TenantCreateManyInput | Prisma.TenantCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Tenant update
 */
export type TenantUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tenant
   */
  select?: Prisma.TenantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tenant
   */
  omit?: Prisma.TenantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TenantInclude<ExtArgs> | null
  /**
   * The data needed to update a Tenant.
   */
  data: Prisma.XOR<Prisma.TenantUpdateInput, Prisma.TenantUncheckedUpdateInput>
  /**
   * Choose, which Tenant to update.
   */
  where: Prisma.TenantWhereUniqueInput
}

/**
 * Tenant updateMany
 */
export type TenantUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Tenants.
   */
  data: Prisma.XOR<Prisma.TenantUpdateManyMutationInput, Prisma.TenantUncheckedUpdateManyInput>
  /**
   * Filter which Tenants to update
   */
  where?: Prisma.TenantWhereInput
  /**
   * Limit how many Tenants to update.
   */
  limit?: number
}

/**
 * Tenant updateManyAndReturn
 */
export type TenantUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tenant
   */
  select?: Prisma.TenantSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Tenant
   */
  omit?: Prisma.TenantOmit<ExtArgs> | null
  /**
   * The data used to update Tenants.
   */
  data: Prisma.XOR<Prisma.TenantUpdateManyMutationInput, Prisma.TenantUncheckedUpdateManyInput>
  /**
   * Filter which Tenants to update
   */
  where?: Prisma.TenantWhereInput
  /**
   * Limit how many Tenants to update.
   */
  limit?: number
}

/**
 * Tenant upsert
 */
export type TenantUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tenant
   */
  select?: Prisma.TenantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tenant
   */
  omit?: Prisma.TenantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TenantInclude<ExtArgs> | null
  /**
   * The filter to search for the Tenant to update in case it exists.
   */
  where: Prisma.TenantWhereUniqueInput
  /**
   * In case the Tenant found by the `where` argument doesn't exist, create a new Tenant with this data.
   */
  create: Prisma.XOR<Prisma.TenantCreateInput, Prisma.TenantUncheckedCreateInput>
  /**
   * In case the Tenant was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TenantUpdateInput, Prisma.TenantUncheckedUpdateInput>
}

/**
 * Tenant delete
 */
export type TenantDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tenant
   */
  select?: Prisma.TenantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tenant
   */
  omit?: Prisma.TenantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TenantInclude<ExtArgs> | null
  /**
   * Filter which Tenant to delete.
   */
  where: Prisma.TenantWhereUniqueInput
}

/**
 * Tenant deleteMany
 */
export type TenantDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Tenants to delete
   */
  where?: Prisma.TenantWhereInput
  /**
   * Limit how many Tenants to delete.
   */
  limit?: number
}

/**
 * Tenant.users
 */
export type Tenant$usersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  cursor?: Prisma.UserWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * Tenant.files
 */
export type Tenant$filesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Upload
   */
  select?: Prisma.UploadSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Upload
   */
  omit?: Prisma.UploadOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadInclude<ExtArgs> | null
  where?: Prisma.UploadWhereInput
  orderBy?: Prisma.UploadOrderByWithRelationInput | Prisma.UploadOrderByWithRelationInput[]
  cursor?: Prisma.UploadWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.UploadScalarFieldEnum | Prisma.UploadScalarFieldEnum[]
}

/**
 * Tenant.uploads
 */
export type Tenant$uploadsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UploadAudit
   */
  select?: Prisma.UploadAuditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UploadAudit
   */
  omit?: Prisma.UploadAuditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UploadAuditInclude<ExtArgs> | null
  where?: Prisma.UploadAuditWhereInput
  orderBy?: Prisma.UploadAuditOrderByWithRelationInput | Prisma.UploadAuditOrderByWithRelationInput[]
  cursor?: Prisma.UploadAuditWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.UploadAuditScalarFieldEnum | Prisma.UploadAuditScalarFieldEnum[]
}

/**
 * Tenant.auditLogs
 */
export type Tenant$auditLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuditLog
   */
  select?: Prisma.AuditLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuditLog
   */
  omit?: Prisma.AuditLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuditLogInclude<ExtArgs> | null
  where?: Prisma.AuditLogWhereInput
  orderBy?: Prisma.AuditLogOrderByWithRelationInput | Prisma.AuditLogOrderByWithRelationInput[]
  cursor?: Prisma.AuditLogWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AuditLogScalarFieldEnum | Prisma.AuditLogScalarFieldEnum[]
}

/**
 * Tenant.vendors
 */
export type Tenant$vendorsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Vendor
   */
  select?: Prisma.VendorSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Vendor
   */
  omit?: Prisma.VendorOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VendorInclude<ExtArgs> | null
  where?: Prisma.VendorWhereInput
  orderBy?: Prisma.VendorOrderByWithRelationInput | Prisma.VendorOrderByWithRelationInput[]
  cursor?: Prisma.VendorWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.VendorScalarFieldEnum | Prisma.VendorScalarFieldEnum[]
}

/**
 * Tenant.customers
 */
export type Tenant$customersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Customer
   */
  select?: Prisma.CustomerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Customer
   */
  omit?: Prisma.CustomerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerInclude<ExtArgs> | null
  where?: Prisma.CustomerWhereInput
  orderBy?: Prisma.CustomerOrderByWithRelationInput | Prisma.CustomerOrderByWithRelationInput[]
  cursor?: Prisma.CustomerWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.CustomerScalarFieldEnum | Prisma.CustomerScalarFieldEnum[]
}

/**
 * Tenant.items
 */
export type Tenant$itemsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Item
   */
  select?: Prisma.ItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Item
   */
  omit?: Prisma.ItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ItemInclude<ExtArgs> | null
  where?: Prisma.ItemWhereInput
  orderBy?: Prisma.ItemOrderByWithRelationInput | Prisma.ItemOrderByWithRelationInput[]
  cursor?: Prisma.ItemWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ItemScalarFieldEnum | Prisma.ItemScalarFieldEnum[]
}

/**
 * Tenant.invoices
 */
export type Tenant$invoicesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Invoice
   */
  select?: Prisma.InvoiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Invoice
   */
  omit?: Prisma.InvoiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoiceInclude<ExtArgs> | null
  where?: Prisma.InvoiceWhereInput
  orderBy?: Prisma.InvoiceOrderByWithRelationInput | Prisma.InvoiceOrderByWithRelationInput[]
  cursor?: Prisma.InvoiceWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.InvoiceScalarFieldEnum | Prisma.InvoiceScalarFieldEnum[]
}

/**
 * Tenant.payments
 */
export type Tenant$paymentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Payment
   */
  select?: Prisma.PaymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Payment
   */
  omit?: Prisma.PaymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PaymentInclude<ExtArgs> | null
  where?: Prisma.PaymentWhereInput
  orderBy?: Prisma.PaymentOrderByWithRelationInput | Prisma.PaymentOrderByWithRelationInput[]
  cursor?: Prisma.PaymentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PaymentScalarFieldEnum | Prisma.PaymentScalarFieldEnum[]
}

/**
 * Tenant.subscription
 */
export type Tenant$subscriptionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PackageSubscription
   */
  select?: Prisma.PackageSubscriptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PackageSubscription
   */
  omit?: Prisma.PackageSubscriptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PackageSubscriptionInclude<ExtArgs> | null
  where?: Prisma.PackageSubscriptionWhereInput
  orderBy?: Prisma.PackageSubscriptionOrderByWithRelationInput | Prisma.PackageSubscriptionOrderByWithRelationInput[]
  cursor?: Prisma.PackageSubscriptionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PackageSubscriptionScalarFieldEnum | Prisma.PackageSubscriptionScalarFieldEnum[]
}

/**
 * Tenant.userSession
 */
export type Tenant$userSessionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Session
   */
  select?: Prisma.SessionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Session
   */
  omit?: Prisma.SessionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionInclude<ExtArgs> | null
  where?: Prisma.SessionWhereInput
  orderBy?: Prisma.SessionOrderByWithRelationInput | Prisma.SessionOrderByWithRelationInput[]
  cursor?: Prisma.SessionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SessionScalarFieldEnum | Prisma.SessionScalarFieldEnum[]
}

/**
 * Tenant.InvoiceItem
 */
export type Tenant$InvoiceItemArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InvoiceItem
   */
  select?: Prisma.InvoiceItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InvoiceItem
   */
  omit?: Prisma.InvoiceItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoiceItemInclude<ExtArgs> | null
  where?: Prisma.InvoiceItemWhereInput
  orderBy?: Prisma.InvoiceItemOrderByWithRelationInput | Prisma.InvoiceItemOrderByWithRelationInput[]
  cursor?: Prisma.InvoiceItemWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.InvoiceItemScalarFieldEnum | Prisma.InvoiceItemScalarFieldEnum[]
}

/**
 * Tenant without action
 */
export type TenantDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tenant
   */
  select?: Prisma.TenantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tenant
   */
  omit?: Prisma.TenantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TenantInclude<ExtArgs> | null
}

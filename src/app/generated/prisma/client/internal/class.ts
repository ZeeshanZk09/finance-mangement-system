
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * Please import the `PrismaClient` class from the `client.ts` file instead.
 */

import * as runtime from "@prisma/client/runtime/client"
import type * as Prisma from "./prismaNamespace"


const config: runtime.GetPrismaClientConfig = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client"
    },
    "output": {
      "value": "F:\\finance-management-system\\tawazun-books\\src\\app\\generated\\prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "client"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "F:\\finance-management-system\\tawazun-books\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativePath": "../../../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider   = \"prisma-client\"\n  engineType = \"client\"\n  output     = \"../src/app/generated/prisma/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n/// Generic enums\nenum UserType {\n  Developer\n  Admin\n  CFO                  @map(\"Chief Financial Officer (CFO)\")\n  AccountingManager    @map(\"Accounting Manager\")\n  Bookkeeper           @map(\"Bookkeeper\")\n  APClerk              @map(\"Accounts Payable (AP) Clerk\")\n  ARClerk              @map(\"Accounts Receivable (AR)\")\n  Treasury             @map(\"Treasury\")\n  PayrollManager       @map(\"Payroll Manager\")\n  PurchasingOfficer    @map(\"Purchasing Officer\")\n  Approver             @map(\"Approver\")\n  InternalAuditor      @map(\"Internal Auditor\")\n  DataAnalyst          @map(\"Data Analyst\")\n  CustomerSupportAgent @map(\"Customer Support Agent\")\n  ExternalAuditor      @map(\"External Auditor\")\n  ServiceAccount       @map(\"Service Account\")\n}\n\nenum SyncStatus {\n  PENDING\n  SYNCED\n  FAILED\n}\n\nenum InvoiceStatus {\n  DRAFT\n  SENT\n  PARTIALLY_PAID\n  PAID\n  CANCELLED\n}\n\n// 'pending' | 'processing' | 'uploaded' | 'failed' | 'deleted'\nenum UploadStatus {\n  PENDING\n  PROCESSING\n  UPLOADED\n  FAILED\n  DELETED\n}\n\nenum PaymentMethod {\n  BANK_TRANSFER\n  CREDIT_CARD\n  DEBIT_CARD\n  CASH\n  CHEQUE\n  ONLINE\n  OTHER\n}\n\nenum PaymentStatus {\n  PENDING\n  COMPLETED\n  FAILED\n  REFUNDED\n}\n\nenum SubscriptionStatus {\n  TRIAL\n  ACTIVE\n  EXPIRED\n  CANCELED\n}\n\nenum packageName {\n  Starter\n  Essentials\n  Professional\n  Enterprise\n}\n\n/// Feature enums (kept as-is; arrays used in Package)\nenum Features {\n  Invoicing\n  Customer_Management\n  Vendor_Management\n  Notifications_and_Reminders\n  Mobile_Access\n  Free_Trials\n  Money_Back_Guarantees\n  Inventory_Management\n  Payment_Tracking\n  Tax_Management\n  Reporting_and_Analytics\n  Expense_Tracking\n  Purchase_Orders\n  User_Roles_and_Permissions\n  Data_Import_and_Export\n  Community_Access\n  Multi_Currency_Support\n  Recurring_Invoices\n  Project_Management\n  Time_Tracking\n  Integrations\n  Custom_Branding\n  API_Access\n  Dashboards\n  Custom_Reports\n  Barcoding\n  Warehouse_Management\n  Shipping_Integration\n  E_Commerce_Integration\n  CRM_Integration\n  Budgeting\n  Forecasting\n  Role_Based_Access_Control\n  Single_Sign_On\n  Two_Factor_Authentication\n  Data_Encryption\n  Audit_Trails\n  Cloud_Backups\n  Multi_Language_Support\n  Document_Storage\n  Compliance_Features\n  Advanced_Security_Features\n  Dedicated_Account_Manager\n  Service_Level_Agreements\n  Priority_Support\n  White_Labeling\n  Custom_Workflows\n  Approval_Processes\n  Data_Migration_Support\n  Performance_Guarantees\n  Uptime_Guarantees\n}\n\n/// TENANTS\nmodel Tenant {\n  id           String                @id @default(uuid()) @db.Uuid\n  name         String\n  email        String\n  slug         String                @unique // friendly unique slug for URL\n  // relations\n  users        User[]\n  files        Upload[]\n  uploads      UploadAudit[]\n  auditLogs    AuditLog[]\n  vendors      Vendor[]\n  customers    Customer[]\n  items        Item[]\n  invoices     Invoice[]\n  payments     Payment[]\n  // subscription (current package)\n  subscription PackageSubscription[]\n  userSession  Session[]\n  InvoiceItem  InvoiceItem[]\n  // tenant-level settings (JSON)\n  settings     Json?\n\n  createdAt DateTime  @default(now())\n  updatedAt DateTime? @updatedAt\n  deletedAt DateTime? // soft delete\n\n  @@index([name, id])\n}\n\n/// USERS\nmodel User {\n  id         String        @id @default(uuid()) @db.Uuid\n  tenantId   String        @db.Uuid\n  tenant     Tenant        @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  name       String\n  email      String        @unique // keep global unique â€” change if you want per-tenant uniqueness\n  password   String\n  role       UserType      @default(Admin) // user, admin, manager, viewer \n  sessions   Session[]\n  files      Upload[]\n  uploads    UploadAudit[]\n  auditLogs  AuditLog[]\n  // optional metadata\n  lastSeenAt DateTime?\n  locale     String? // e.g. \"en\", \"ur\"\n  isActive   Boolean       @default(true)\n  ip         String\n\n  createdAt  DateTime   @default(now())\n  updatedAt  DateTime?  @updatedAt\n  deletedAt  DateTime?\n  syncStatus SyncStatus @default(PENDING)\n\n  @@index([tenantId, email, id])\n}\n\n/// SESSIONS\nmodel Session {\n  id           Int       @id @default(autoincrement())\n  userId       String    @db.Uuid\n  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  tenantId     String    @db.Uuid\n  tenant       Tenant    @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  sessionToken String    @unique\n  expires      DateTime\n  ipAddress    String?\n  userAgent    String?\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime? @updatedAt\n\n  @@index([userId, tenantId, id])\n}\n\nmodel Upload {\n  id       Int    @id @default(autoincrement())\n  tenantId String @db.Uuid\n  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  userId   String @db.Uuid // uploader user\n  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  purpose      String // e.g., \"invoice\", \"receipt\", \"logo\", \"bank-statement\"\n  originalName String\n  filename     String // stored local filename \n  localPath    String? // absolute/relative path\n  mimeType     String\n  size         Int\n  status       UploadStatus\n  attempts     Int           @default(0)\n  maxAttempts  Int           @default(5)\n  publicId     String? // Cloudinary public_id\n  url          String? // secure_url\n  errorMessage String?\n  uploadAudit  UploadAudit[]\n  createdAt    DateTime      @default(now())\n  updatedAt    DateTime?     @updatedAt\n  // optional meta json\n  meta         Json?\n\n  @@index([tenantId])\n}\n\nmodel UploadAudit {\n  id             Int       @id @default(autoincrement())\n  uploadId       Int\n  upload         Upload    @relation(fields: [uploadId], references: [id], onDelete: Cascade)\n  tenantId       String    @db.Uuid\n  tenant         Tenant    @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  userId         String    @db.Uuid // optional: who performed the action\n  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  action         String // e.g., \"create\", \"processing\", \"uploaded\", \"failed\", \"deleted\", \"retry\"\n  previousStatus String? // status before action\n  newStatus      String? // status after action\n  note           String? // optional human-readable note / error message\n  meta           Json? // extra metadata (cloudinary response, worker attempt data etc.)\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime? @updatedAt\n\n  @@index([uploadId])\n  @@index([tenantId])\n  @@index([action])\n}\n\n/// VENDORS\nmodel Vendor {\n  id         Int        @id @default(autoincrement())\n  tenantId   String     @db.Uuid\n  tenant     Tenant     @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  name       String\n  email      String?\n  phone      String?\n  address    String?\n  taxId      String?\n  syncStatus SyncStatus @default(PENDING)\n  createdAt  DateTime   @default(now())\n  updatedAt  DateTime?  @updatedAt\n\n  @@index([tenantId, id, email, phone])\n}\n\n/// CUSTOMERS\nmodel Customer {\n  id         Int        @id @default(autoincrement())\n  tenantId   String     @db.Uuid\n  tenant     Tenant     @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  name       String\n  email      String?\n  phone      String?\n  address    String?\n  invoices   Invoice[]\n  syncStatus SyncStatus @default(PENDING)\n  createdAt  DateTime   @default(now())\n  updatedAt  DateTime?  @updatedAt\n\n  @@index([tenantId, id])\n}\n\n/// ITEMS (inventory)\nmodel Item {\n  id           Int           @id @default(autoincrement())\n  tenantId     String        @db.Uuid\n  tenant       Tenant        @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  name         String\n  sku          String?\n  description  String?\n  unitPrice    Decimal       @db.Decimal(12, 2)\n  quantity     Decimal       @default(0.0) @db.Decimal(18, 4) // support fractional qty\n  invoiceItems InvoiceItem[]\n  syncStatus   SyncStatus    @default(PENDING)\n  createdAt    DateTime      @default(now())\n  updatedAt    DateTime?     @updatedAt\n\n  @@unique([tenantId, sku]) // SKU unique per tenant (if present)\n  @@index([tenantId, id])\n}\n\nmodel Package {\n  id           Int                   @id @default(autoincrement())\n  name         packageName           @unique @default(Starter)\n  price        Decimal               @db.Decimal(12, 2)\n  trialPrice   Decimal               @db.Decimal(12, 2)\n  Features     Features[]\n  subscription PackageSubscription[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([price, name])\n}\n\nmodel PackageSubscription {\n  id       Int    @id @default(autoincrement())\n  tenantId String @db.Uuid\n  tenant   Tenant @relation(fields: [tenantId], references: [id])\n\n  packageId Int\n  package   Package @relation(fields: [packageId], references: [id])\n\n  // Snapshot fields (store what the package looked like at purchase time)\n  packageName       packageName @unique @default(Starter)\n  packagePrice      Decimal     @db.Decimal(12, 2)\n  packageTrialPrice Decimal     @db.Decimal(12, 2)\n\n  status     SubscriptionStatus @default(TRIAL)\n  amountPaid Decimal            @default(\"0.00\") @db.Decimal(12, 2)\n\n  startsAt    DateTime\n  endsAt      DateTime?\n  trialEndsAt DateTime?\n  metadata    Json?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([tenantId, packageId])\n  @@index([packageId])\n}\n\n/// INVOICES\nmodel Invoice {\n  id            Int           @id @default(autoincrement())\n  tenantId      String        @db.Uuid\n  tenant        Tenant        @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  invoiceNumber String // unique per tenant\n  invoicePrefix String? // optional prefix\n  date          DateTime\n  dueDate       DateTime?\n  status        InvoiceStatus @default(DRAFT)\n  currency      String // ISO code, e.g. \"USD\"\n  currencyRate  Decimal?      @db.Decimal(20, 8) // optional fx rate at issuance\n  subtotal      Decimal       @db.Decimal(12, 2)\n  tax           Decimal       @default(0.0) @db.Decimal(12, 2)\n  total         Decimal       @db.Decimal(12, 2)\n  amountPaid    Decimal       @default(0.0) @db.Decimal(12, 2)\n  balanceDue    Decimal       @db.Decimal(12, 2)\n  note          String?\n  customerId    Int\n  customer      Customer      @relation(fields: [customerId], references: [id], onDelete: Cascade)\n  items         InvoiceItem[]\n  payments      Payment[]\n  createdAt     DateTime      @default(now())\n  updatedAt     DateTime?     @updatedAt\n  syncStatus    SyncStatus    @default(PENDING)\n\n  @@unique([invoiceNumber, tenantId])\n  @@index([tenantId])\n  @@index([date])\n}\n\n/// INVOICE ITEMS (line items)\nmodel InvoiceItem {\n  id          Int        @id @default(autoincrement())\n  tenantId    String     @db.Uuid\n  tenant      Tenant     @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  invoiceId   Int\n  invoice     Invoice    @relation(fields: [invoiceId], references: [id], onDelete: Cascade)\n  itemId      Int\n  item        Item       @relation(fields: [itemId], references: [id], onDelete: Cascade)\n  description String?\n  quantity    Decimal    @db.Decimal(18, 4)\n  unitPrice   Decimal    @db.Decimal(12, 2)\n  lineTotal   Decimal    @db.Decimal(12, 2)\n  createdAt   DateTime   @default(now())\n  updatedAt   DateTime?  @updatedAt\n  syncStatus  SyncStatus @default(PENDING)\n\n  @@index([tenantId])\n  @@index([invoiceId])\n}\n\n/// PAYMENTS\nmodel Payment {\n  id         Int           @id @default(autoincrement())\n  tenantId   String        @db.Uuid\n  tenant     Tenant        @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  invoiceId  Int\n  invoice    Invoice       @relation(fields: [invoiceId], references: [id], onDelete: Cascade)\n  date       DateTime\n  paidDate   DateTime\n  amount     Decimal       @db.Decimal(12, 2)\n  method     PaymentMethod @default(CREDIT_CARD)\n  status     PaymentStatus @default(COMPLETED)\n  reference  String? // gateway transaction id, check number etc.\n  createdAt  DateTime      @default(now())\n  updatedAt  DateTime?     @updatedAt\n  syncStatus SyncStatus    @default(PENDING)\n\n  @@index([tenantId])\n  @@index([invoiceId])\n  @@index([reference])\n}\n\n/// AUDIT LOG (for security / admin tracking)\nmodel AuditLog {\n  id        Int       @id @default(autoincrement())\n  tenantId  String    @db.Uuid\n  tenant    Tenant    @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  userId    String    @db.Uuid\n  user      User?     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  actor     String? // e.g. \"system\", \"user:123\"\n  action    String // e.g. \"invoice.create\", \"user.login\"\n  meta      Json? // arbitrary metadata\n  ipAddress String?\n  createdAt DateTime  @default(now())\n  updatedAt DateTime? @updatedAt\n\n  @@index([tenantId])\n  @@index([userId])\n  @@index([action])\n}\n",
  "inlineSchemaHash": "1581f4e700c7b52f522ded0d1604ec795d9aa2a25efdb0e1e9ba7408ec15f81e",
  "copyEngine": true,
  "runtimeDataModel": {
    "models": {},
    "enums": {},
    "types": {}
  },
  "dirname": ""
}

config.runtimeDataModel = JSON.parse("{\"models\":{\"Tenant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TenantToUser\"},{\"name\":\"files\",\"kind\":\"object\",\"type\":\"Upload\",\"relationName\":\"TenantToUpload\"},{\"name\":\"uploads\",\"kind\":\"object\",\"type\":\"UploadAudit\",\"relationName\":\"TenantToUploadAudit\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToTenant\"},{\"name\":\"vendors\",\"kind\":\"object\",\"type\":\"Vendor\",\"relationName\":\"TenantToVendor\"},{\"name\":\"customers\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToTenant\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"ItemToTenant\"},{\"name\":\"invoices\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToTenant\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToTenant\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"PackageSubscription\",\"relationName\":\"PackageSubscriptionToTenant\"},{\"name\":\"userSession\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToTenant\"},{\"name\":\"InvoiceItem\",\"kind\":\"object\",\"type\":\"InvoiceItem\",\"relationName\":\"InvoiceItemToTenant\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToUser\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserType\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"files\",\"kind\":\"object\",\"type\":\"Upload\",\"relationName\":\"UploadToUser\"},{\"name\":\"uploads\",\"kind\":\"object\",\"type\":\"UploadAudit\",\"relationName\":\"UploadAuditToUser\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"lastSeenAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"locale\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"syncStatus\",\"kind\":\"enum\",\"type\":\"SyncStatus\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"SessionToTenant\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Upload\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToUpload\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UploadToUser\"},{\"name\":\"purpose\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"originalName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"localPath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"UploadStatus\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxAttempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"publicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadAudit\",\"kind\":\"object\",\"type\":\"UploadAudit\",\"relationName\":\"UploadToUploadAudit\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"UploadAudit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uploadId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"upload\",\"kind\":\"object\",\"type\":\"Upload\",\"relationName\":\"UploadToUploadAudit\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToUploadAudit\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UploadAuditToUser\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"previousStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"newStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Vendor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToVendor\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taxId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"syncStatus\",\"kind\":\"enum\",\"type\":\"SyncStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"CustomerToTenant\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoices\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"CustomerToInvoice\"},{\"name\":\"syncStatus\",\"kind\":\"enum\",\"type\":\"SyncStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Item\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"ItemToTenant\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"invoiceItems\",\"kind\":\"object\",\"type\":\"InvoiceItem\",\"relationName\":\"InvoiceItemToItem\"},{\"name\":\"syncStatus\",\"kind\":\"enum\",\"type\":\"SyncStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Package\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"enum\",\"type\":\"packageName\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"trialPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Features\",\"kind\":\"enum\",\"type\":\"Features\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"PackageSubscription\",\"relationName\":\"PackageToPackageSubscription\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PackageSubscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"PackageSubscriptionToTenant\"},{\"name\":\"packageId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"package\",\"kind\":\"object\",\"type\":\"Package\",\"relationName\":\"PackageToPackageSubscription\"},{\"name\":\"packageName\",\"kind\":\"enum\",\"type\":\"packageName\"},{\"name\":\"packagePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"packageTrialPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SubscriptionStatus\"},{\"name\":\"amountPaid\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"startsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"trialEndsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Invoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"InvoiceToTenant\"},{\"name\":\"invoiceNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoicePrefix\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InvoiceStatus\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currencyRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"subtotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"tax\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"amountPaid\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"balanceDue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToInvoice\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"InvoiceItem\",\"relationName\":\"InvoiceToInvoiceItem\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"InvoiceToPayment\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"syncStatus\",\"kind\":\"enum\",\"type\":\"SyncStatus\"}],\"dbName\":null},\"InvoiceItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"InvoiceItemToTenant\"},{\"name\":\"invoiceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"invoice\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToInvoiceItem\"},{\"name\":\"itemId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"InvoiceItemToItem\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"lineTotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"syncStatus\",\"kind\":\"enum\",\"type\":\"SyncStatus\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"PaymentToTenant\"},{\"name\":\"invoiceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"invoice\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToPayment\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paidDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"method\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"syncStatus\",\"kind\":\"enum\",\"type\":\"SyncStatus\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"AuditLogToTenant\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"actor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
config.engineWasm = undefined

async function decodeBase64AsWasm(wasmBase64: string): Promise<WebAssembly.Module> {
  const { Buffer } = await import('node:buffer')
  const wasmArray = Buffer.from(wasmBase64, 'base64')
  return new WebAssembly.Module(wasmArray)
}

config.compilerWasm = {
  getRuntime: async () => await import("@prisma/client/runtime/query_compiler_bg.postgresql.mjs"),

  getQueryCompilerWasmModule: async () => {
    const { wasm } = await import("@prisma/client/runtime/query_compiler_bg.postgresql.wasm-base64.mjs")
    return await decodeBase64AsWasm(wasm)
  }
}




export type LogOptions<ClientOptions extends Prisma.PrismaClientOptions> =
  'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never

export interface PrismaClientConstructor {
    /**
   * ## Prisma Client
   * 
   * Type-safe database client for TypeScript
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Tenants
   * const tenants = await prisma.tenant.findMany()
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  new <
    Options extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
    LogOpts extends LogOptions<Options> = LogOptions<Options>,
    OmitOpts extends Prisma.PrismaClientOptions['omit'] = Options extends { omit: infer U } ? U : Prisma.PrismaClientOptions['omit'],
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
  >(options?: Prisma.Subset<Options, Prisma.PrismaClientOptions> ): PrismaClient<LogOpts, OmitOpts, ExtArgs>
}

/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Tenants
 * const tenants = await prisma.tenant.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */

export interface PrismaClient<
  in LogOpts extends Prisma.LogLevel = never,
  in out OmitOpts extends Prisma.PrismaClientOptions['omit'] = Prisma.PrismaClientOptions['omit'],
  in out ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

  $on<V extends LogOpts>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): runtime.Types.Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): runtime.Types.Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): runtime.Types.Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => runtime.Types.Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): runtime.Types.Utils.JsPromise<R>


  $extends: runtime.Types.Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<OmitOpts>, ExtArgs, runtime.Types.Utils.Call<Prisma.TypeMapCb<OmitOpts>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.tenant`: Exposes CRUD operations for the **Tenant** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tenants
    * const tenants = await prisma.tenant.findMany()
    * ```
    */
  get tenant(): Prisma.TenantDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.upload`: Exposes CRUD operations for the **Upload** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Uploads
    * const uploads = await prisma.upload.findMany()
    * ```
    */
  get upload(): Prisma.UploadDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.uploadAudit`: Exposes CRUD operations for the **UploadAudit** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UploadAudits
    * const uploadAudits = await prisma.uploadAudit.findMany()
    * ```
    */
  get uploadAudit(): Prisma.UploadAuditDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.vendor`: Exposes CRUD operations for the **Vendor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vendors
    * const vendors = await prisma.vendor.findMany()
    * ```
    */
  get vendor(): Prisma.VendorDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.customer`: Exposes CRUD operations for the **Customer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customers
    * const customers = await prisma.customer.findMany()
    * ```
    */
  get customer(): Prisma.CustomerDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.item`: Exposes CRUD operations for the **Item** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Items
    * const items = await prisma.item.findMany()
    * ```
    */
  get item(): Prisma.ItemDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.package`: Exposes CRUD operations for the **Package** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Packages
    * const packages = await prisma.package.findMany()
    * ```
    */
  get package(): Prisma.PackageDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.packageSubscription`: Exposes CRUD operations for the **PackageSubscription** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PackageSubscriptions
    * const packageSubscriptions = await prisma.packageSubscription.findMany()
    * ```
    */
  get packageSubscription(): Prisma.PackageSubscriptionDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.invoice`: Exposes CRUD operations for the **Invoice** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invoices
    * const invoices = await prisma.invoice.findMany()
    * ```
    */
  get invoice(): Prisma.InvoiceDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.invoiceItem`: Exposes CRUD operations for the **InvoiceItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InvoiceItems
    * const invoiceItems = await prisma.invoiceItem.findMany()
    * ```
    */
  get invoiceItem(): Prisma.InvoiceItemDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.auditLog`: Exposes CRUD operations for the **AuditLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuditLogs
    * const auditLogs = await prisma.auditLog.findMany()
    * ```
    */
  get auditLog(): Prisma.AuditLogDelegate<ExtArgs, { omit: OmitOpts }>;
}

export function getPrismaClientClass(dirname: string): PrismaClientConstructor {
  config.dirname = dirname
  return runtime.getPrismaClient(config) as unknown as PrismaClientConstructor
}
